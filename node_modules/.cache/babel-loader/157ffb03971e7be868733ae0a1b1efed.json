{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminRoles/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { getRoles } from '@testing-library/react';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport Roles from './Roles';\nimport useAuthorize from \"../../../utils/authorization\";\nimport './index.css';\nimport { message, Input, Form, Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminRoles() {\n  _s();\n\n  const [form, setForm] = useState({});\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n\n  const handleSubmit = () => {\n    axios.post('/api/roles/', form).then(() => {\n      message.success(\"Rol creado correctamente\");\n      return dispatch(getRoles());\n    });\n  };\n\n  const handleChange = (obj1, obj2) => {\n    setForm(obj2);\n  };\n\n  const toggleForm = () => {\n    document.getElementById('newRole').style.display = document.getElementById('newRole').style.display === 'block' ? 'none' : 'block';\n  };\n\n  useAuthorize(user, 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adminRoles\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"fs-2 text-secondary text-center p-5\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Gestionar roles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: toggleForm,\n      className: \"mb-5 p-3 fs-3 button-style green\",\n      children: \"Crear nuevo rol\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        display: \"none\"\n      },\n      name: \"newRole\",\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 8\n      },\n      initialValues: {\n        remember: true\n      },\n      onValuesChange: (obj, obj2) => handleChange(obj, obj2),\n      onFinish: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Tipo de rol\",\n        name: \"tipo\",\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          display: form.tipo ? \"block\" : \"none\"\n        },\n        htmlType: \"submit\",\n        type: \"submit\",\n        children: \"Crear rol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Roles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminRoles, \"jnpsFZb8OKPBq+bYxIW9HrcHWPg=\", false, function () {\n  return [useDispatch, useSelector, useAuthorize];\n});\n\n_c = AdminRoles;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoles\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminRoles/index.jsx"],"names":["getRoles","React","useState","useDispatch","axios","useSelector","Roles","useAuthorize","message","Input","Form","Button","AdminRoles","form","setForm","dispatch","user","state","handleSubmit","post","then","success","handleChange","obj1","obj2","toggleForm","document","getElementById","style","display","span","remember","obj","tipo"],"mappings":"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","sourcesContent":["import { getRoles } from '@testing-library/react'\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport axios from 'axios'\nimport { useSelector } from 'react-redux'\nimport Roles from './Roles'\nimport useAuthorize from \"../../../utils/authorization\";\nimport './index.css'\nimport { message, Input, Form, Button } from \"antd\";\n\n\nexport default function AdminRoles() {\n    const [form, setForm] = useState({})\n\n    const dispatch = useDispatch()\n\n    const user = useSelector(state => state.user)\n\n    const handleSubmit = () => {\n        axios.post('/api/roles/', form)\n        .then(() => {\n            message.success(\"Rol creado correctamente\");\n            return dispatch(getRoles())})\n    }\n\n    const handleChange = (obj1, obj2) => {\n        setForm(obj2)\n    }\n\n    const toggleForm = () => {\n        document.getElementById('newRole').style.display = document.getElementById('newRole').style.display === 'block' ? 'none' : 'block'\n    }\n\n    useAuthorize(user, 1)\n\n    return (\n        <div className='adminRoles'>\n            <h1 className=\"fs-2 text-secondary text-center p-5\">\n        <strong>Gestionar roles</strong>\n      </h1>\n      <button\n          type=\"button\"\n          onClick={toggleForm}\n          className=\"mb-5 p-3 fs-3 button-style green\"\n        >\n          Crear nuevo rol\n        </button>\n\n        <Form\n        style={{ display: \"none\" }}\n        name=\"newRole\"\n        labelCol={{\n          span: 6,\n        }}\n        wrapperCol={{\n          span: 8,\n        }}\n        initialValues={{\n          remember: true,\n        }}\n        onValuesChange={(obj, obj2) => handleChange(obj, obj2)}\n        onFinish={handleSubmit}\n      >\n        <Form.Item label=\"Tipo de rol\" name=\"tipo\">\n          <Input />\n        </Form.Item>\n        \n        <Button\n          style={{ display: form.tipo ? \"block\" : \"none\" }}\n          htmlType=\"submit\"\n          type=\"submit\"\n        >\n          Crear rol\n        </Button>\n      </Form>\n\n            <Roles />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}