{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Gestor/DashboardGestor/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { useHistory } from 'react-router';\nimport { Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DashboardGestor() {\n  _s();\n\n  var _user$sede;\n\n  const user = useSelector(state => state.user);\n  const bloques = useSelector(state => state.bloques);\n  const [voluntarios, setVoluntarios] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    axios.get(`/api/users/sede/${user.sedeId}`).then(res => res.data).then(voluntarios => setVoluntarios(voluntarios.filter(voluntario => voluntario.rolId > 2))).catch(err => err);\n  }, [user, bloques]);\n\n  const minimos = user => {\n    const bloquesMinimos = bloques.filter(bloque => bloque.minimo === true);\n    const userBloques = bloquesMinimos.filter(bloque => bloque.roles.map(rol => rol.id).includes(user.rolId));\n    const entregados = user.entregas.filter(entrega => entrega.bloque.minimo === true && entrega.aprobado === true);\n    return `${entregados.length}/${userBloques.length}`;\n  };\n\n  const opcionales = user => {\n    const bloquesOpcionales = bloques.filter(bloque => bloque.minimo === false);\n    const userBloques = bloquesOpcionales.filter(bloque => bloque.roles.map(rol => rol.id).includes(user.rolId));\n    const entregados = user.entregas.filter(entrega => entrega.bloque.minimo === false && entrega.aprobado === true);\n    return `${entregados.length}/${userBloques.length}`;\n  };\n\n  const pendientes = user => {\n    return user.entregas.filter(entrega => entrega.aprobado === false).length;\n  };\n\n  const totalPendientes = () => {\n    let entregas = voluntarios.map(voluntario => voluntario.entregas.map(entrega => entrega.aprobado));\n\n    for (let i = 0; i < entregas.length; i++) {\n      entregas = [...entregas, ...entregas[i]];\n    }\n\n    return entregas;\n  };\n\n  const columns = [{\n    title: '',\n    dataIndex: 'total',\n    key: 'total'\n  }, {\n    title: 'Voluntario',\n    dataIndex: 'voluntario',\n    key: 'voluntario'\n  }, {\n    title: 'Bloques minimos completados',\n    dataIndex: 'bloquesMinimos',\n    key: 'bloquesMinimos'\n  }, {\n    title: 'Bloques opcionales completados',\n    dataIndex: 'bloquesOpcionales',\n    key: 'bloquesOpcionales'\n  }, {\n    title: 'Entregas pendientes',\n    dataIndex: 'entregasPendientes',\n    key: 'entregasPendientes'\n  }];\n  const dataVoluntarios = voluntarios.map(voluntario => {\n    return {\n      key: voluntario.id,\n      total: '',\n      voluntario: voluntario.full_name,\n      bloquesMinimos: minimos(voluntario),\n      bloquesOpcionales: opcionales(voluntario),\n      entregasPendientes: pendientes(voluntario)\n    };\n  });\n  const dataSource = [...dataVoluntarios, {\n    key: 'total',\n    total: 'Total',\n    voluntario: voluntarios.length,\n    bloquesMinimos: 13,\n    bloquesOpcionales: 12,\n    entregasPendientes: 11\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log('entregas', totalPendientes()), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Dashboard de \", (_user$sede = user.sede) === null || _user$sede === void 0 ? void 0 : _user$sede.nombre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: dataSource,\n      pagination: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DashboardGestor, \"ev2HWEaJOR860FZn0z11F/KVTrI=\", false, function () {\n  return [useSelector, useSelector, useHistory];\n});\n\n_c = DashboardGestor;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardGestor\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Gestor/DashboardGestor/index.jsx"],"names":["React","useEffect","useState","useSelector","axios","useHistory","Table","DashboardGestor","user","state","bloques","voluntarios","setVoluntarios","history","get","sedeId","then","res","data","filter","voluntario","rolId","catch","err","minimos","bloquesMinimos","bloque","minimo","userBloques","roles","map","rol","id","includes","entregados","entregas","entrega","aprobado","length","opcionales","bloquesOpcionales","pendientes","totalPendientes","i","columns","title","dataIndex","key","dataVoluntarios","total","full_name","entregasPendientes","dataSource","console","log","sede","nombre"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,KAAT,QAAsB,MAAtB;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AAAA;;AAEtC,QAAMC,IAAI,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAME,OAAO,GAAGP,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,OAAhB,CAA3B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMW,OAAO,GAAGR,UAAU,EAA1B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AAEZG,IAAAA,KAAK,CAACU,GAAN,CAAW,mBAAkBN,IAAI,CAACO,MAAO,EAAzC,EACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IADjB,EAECF,IAFD,CAEML,WAAW,IAAIC,cAAc,CAACD,WAAW,CAACQ,MAAZ,CAAmBC,UAAU,IAAIA,UAAU,CAACC,KAAX,GAAmB,CAApD,CAAD,CAFnC,EAGCC,KAHD,CAGOC,GAAG,IAAIA,GAHd;AAIH,GANQ,EAMN,CAACf,IAAD,EAAOE,OAAP,CANM,CAAT;;AAQA,QAAMc,OAAO,GAAIhB,IAAD,IAAU;AACtB,UAAMiB,cAAc,GAAGf,OAAO,CAACS,MAAR,CAAeO,MAAM,IAAIA,MAAM,CAACC,MAAP,KAAkB,IAA3C,CAAvB;AACA,UAAMC,WAAW,GAAGH,cAAc,CAACN,MAAf,CAAsBO,MAAM,IAAIA,MAAM,CAACG,KAAP,CAAaC,GAAb,CAAiBC,GAAG,IAAIA,GAAG,CAACC,EAA5B,EAAgCC,QAAhC,CAAyCzB,IAAI,CAACa,KAA9C,CAAhC,CAApB;AACA,UAAMa,UAAU,GAAG1B,IAAI,CAAC2B,QAAL,CAAchB,MAAd,CAAqBiB,OAAO,IAAIA,OAAO,CAACV,MAAR,CAAeC,MAAf,KAA0B,IAA1B,IAAkCS,OAAO,CAACC,QAAR,KAAqB,IAAvF,CAAnB;AACA,WAAQ,GAAEH,UAAU,CAACI,MAAO,IAAGV,WAAW,CAACU,MAAO,EAAlD;AACH,GALD;;AAOA,QAAMC,UAAU,GAAI/B,IAAD,IAAU;AACzB,UAAMgC,iBAAiB,GAAG9B,OAAO,CAACS,MAAR,CAAeO,MAAM,IAAIA,MAAM,CAACC,MAAP,KAAkB,KAA3C,CAA1B;AACA,UAAMC,WAAW,GAAGY,iBAAiB,CAACrB,MAAlB,CAAyBO,MAAM,IAAIA,MAAM,CAACG,KAAP,CAAaC,GAAb,CAAiBC,GAAG,IAAIA,GAAG,CAACC,EAA5B,EAAgCC,QAAhC,CAAyCzB,IAAI,CAACa,KAA9C,CAAnC,CAApB;AACA,UAAMa,UAAU,GAAG1B,IAAI,CAAC2B,QAAL,CAAchB,MAAd,CAAqBiB,OAAO,IAAIA,OAAO,CAACV,MAAR,CAAeC,MAAf,KAA0B,KAA1B,IAAmCS,OAAO,CAACC,QAAR,KAAqB,IAAxF,CAAnB;AACA,WAAQ,GAAEH,UAAU,CAACI,MAAO,IAAGV,WAAW,CAACU,MAAO,EAAlD;AACH,GALD;;AAOA,QAAMG,UAAU,GAAIjC,IAAD,IAAU;AACzB,WAAOA,IAAI,CAAC2B,QAAL,CAAchB,MAAd,CAAqBiB,OAAO,IAAIA,OAAO,CAACC,QAAR,KAAqB,KAArD,EAA4DC,MAAnE;AACH,GAFD;;AAIA,QAAMI,eAAe,GAAG,MAAM;AAC1B,QAAIP,QAAQ,GAAGxB,WAAW,CAACmB,GAAZ,CAAgBV,UAAU,IAAIA,UAAU,CAACe,QAAX,CAAoBL,GAApB,CAAwBM,OAAO,IAAIA,OAAO,CAACC,QAA3C,CAA9B,CAAf;;AACA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,QAAQ,CAACG,MAA7B,EAAqCK,CAAC,EAAtC,EAA0C;AACtCR,MAAAA,QAAQ,GAAG,CAAC,GAAGA,QAAJ,EAAc,GAAGA,QAAQ,CAACQ,CAAD,CAAzB,CAAX;AACH;;AACD,WAAOR,QAAP;AACH,GAND;;AAQA,QAAMS,OAAO,GAAG,CACZ;AACIC,IAAAA,KAAK,EAAE,EADX;AAEIC,IAAAA,SAAS,EAAE,OAFf;AAGIC,IAAAA,GAAG,EAAE;AAHT,GADY,EAMZ;AACIF,IAAAA,KAAK,EAAE,YADX;AAEIC,IAAAA,SAAS,EAAE,YAFf;AAGIC,IAAAA,GAAG,EAAE;AAHT,GANY,EAWZ;AACIF,IAAAA,KAAK,EAAE,6BADX;AAEIC,IAAAA,SAAS,EAAE,gBAFf;AAGIC,IAAAA,GAAG,EAAE;AAHT,GAXY,EAgBZ;AACIF,IAAAA,KAAK,EAAE,gCADX;AAEIC,IAAAA,SAAS,EAAE,mBAFf;AAGIC,IAAAA,GAAG,EAAE;AAHT,GAhBY,EAqBZ;AACIF,IAAAA,KAAK,EAAE,qBADX;AAEIC,IAAAA,SAAS,EAAE,oBAFf;AAGIC,IAAAA,GAAG,EAAE;AAHT,GArBY,CAAhB;AA4BA,QAAMC,eAAe,GAAGrC,WAAW,CAACmB,GAAZ,CAAgBV,UAAU,IAAI;AAClD,WACE;AACE2B,MAAAA,GAAG,EAAE3B,UAAU,CAACY,EADlB;AAEEiB,MAAAA,KAAK,EAAE,EAFT;AAGE7B,MAAAA,UAAU,EAAEA,UAAU,CAAC8B,SAHzB;AAIEzB,MAAAA,cAAc,EAAED,OAAO,CAACJ,UAAD,CAJzB;AAKEoB,MAAAA,iBAAiB,EAAED,UAAU,CAACnB,UAAD,CAL/B;AAME+B,MAAAA,kBAAkB,EAAEV,UAAU,CAACrB,UAAD;AANhC,KADF;AAUD,GAXqB,CAAxB;AAaA,QAAMgC,UAAU,GAAG,CAAC,GAAGJ,eAAJ,EAAqB;AAEhCD,IAAAA,GAAG,EAAE,OAF2B;AAGhCE,IAAAA,KAAK,EAAE,OAHyB;AAIhC7B,IAAAA,UAAU,EAAET,WAAW,CAAC2B,MAJQ;AAKhCb,IAAAA,cAAc,EAAE,EALgB;AAMhCe,IAAAA,iBAAiB,EAAE,EANa;AAOhCW,IAAAA,kBAAkB,EAAE;AAPY,GAArB,CAAnB;AAWA,sBACI;AAAA,eACKE,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBZ,eAAe,EAAvC,CADL,eAEI;AAAA,gDAAkBlC,IAAI,CAAC+C,IAAvB,+CAAkB,WAAWC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEZ,OAAhB;AAAyB,MAAA,UAAU,EAAEQ,UAArC;AAAiD,MAAA,UAAU,EAAE;AAA7D;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GArGuB7C,e;UAEPJ,W,EACGA,W,EAEAE,U;;;KALIE,e","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport axios from 'axios'\nimport { useHistory } from 'react-router'\nimport { Table } from 'antd'\n\nexport default function DashboardGestor() {\n\n    const user = useSelector(state => state.user)\n    const bloques = useSelector(state => state.bloques)\n    const [voluntarios, setVoluntarios] = useState([])\n    const history = useHistory();\n\n    useEffect(() => {\n\n        axios.get(`/api/users/sede/${user.sedeId}`)\n        .then(res => res.data)\n        .then(voluntarios => setVoluntarios(voluntarios.filter(voluntario => voluntario.rolId > 2)))\n        .catch(err => err)\n    }, [user, bloques])\n\n    const minimos = (user) => {\n        const bloquesMinimos = bloques.filter(bloque => bloque.minimo === true)\n        const userBloques = bloquesMinimos.filter(bloque => bloque.roles.map(rol => rol.id).includes(user.rolId))\n        const entregados = user.entregas.filter(entrega => entrega.bloque.minimo === true && entrega.aprobado === true)\n        return `${entregados.length}/${userBloques.length}`\n    }\n\n    const opcionales = (user) => {\n        const bloquesOpcionales = bloques.filter(bloque => bloque.minimo === false)\n        const userBloques = bloquesOpcionales.filter(bloque => bloque.roles.map(rol => rol.id).includes(user.rolId))\n        const entregados = user.entregas.filter(entrega => entrega.bloque.minimo === false && entrega.aprobado === true)\n        return `${entregados.length}/${userBloques.length}`\n    }\n\n    const pendientes = (user) => {\n        return user.entregas.filter(entrega => entrega.aprobado === false).length\n    }\n\n    const totalPendientes = () => {\n        let entregas = voluntarios.map(voluntario => voluntario.entregas.map(entrega => entrega.aprobado))\n        for (let i = 0; i < entregas.length; i++) {\n            entregas = [...entregas, ...entregas[i]]\n        }\n        return entregas\n    }\n\n    const columns = [\n        {\n            title: '',\n            dataIndex: 'total',\n            key: 'total',\n        },\n        {\n            title: 'Voluntario',\n            dataIndex: 'voluntario',\n            key: 'voluntario',\n        },\n        {\n            title: 'Bloques minimos completados',\n            dataIndex: 'bloquesMinimos',\n            key: 'bloquesMinimos',\n        },\n        {\n            title: 'Bloques opcionales completados',\n            dataIndex: 'bloquesOpcionales',\n            key: 'bloquesOpcionales',\n        },\n        {\n            title: 'Entregas pendientes',\n            dataIndex: 'entregasPendientes',\n            key: 'entregasPendientes',\n        }\n    ]\n\n    const dataVoluntarios = voluntarios.map(voluntario => {\n        return (\n          {\n            key: voluntario.id,\n            total: '',\n            voluntario: voluntario.full_name,\n            bloquesMinimos: minimos(voluntario),\n            bloquesOpcionales: opcionales(voluntario),\n            entregasPendientes: pendientes(voluntario),\n          }\n        )\n      })\n\n    const dataSource = [...dataVoluntarios, {\n        \n            key: 'total',\n            total: 'Total',\n            voluntario: voluntarios.length,\n            bloquesMinimos: 13,\n            bloquesOpcionales: 12,\n            entregasPendientes: 11,\n          \n    }]\n\n    return (\n        <div>\n            {console.log('entregas', totalPendientes())}\n            <h1>Dashboard de {user.sede?.nombre}</h1>\n\n            <Table columns={columns} dataSource={dataSource} pagination={false} />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}