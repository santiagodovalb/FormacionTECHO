{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Gestor/DashboardGestor/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { Table } from 'antd';\nimport { totalMinimos, totalOpcionales, totalPendientes, minimos, opcionales, pendientes } from './dashUtils';\nimport useAuthorize from '../../../utils/authorization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DashboardGestor() {\n  _s();\n\n  var _user$sede;\n\n  const user = useSelector(state => state.user);\n  const bloques = useSelector(state => state.bloques);\n  const [voluntarios, setVoluntarios] = useState([]);\n  useEffect(() => {\n    axios.get(`/api/users/sede/${user.sedeId}`).then(res => res.data).then(voluntarios => setVoluntarios(voluntarios.filter(voluntario => voluntario.rolId > 2))).catch(err => err);\n  }, [user, bloques]);\n  useAuthorize(user, 2);\n  const columns = [{\n    title: '',\n    dataIndex: 'total',\n    key: 'total'\n  }, {\n    title: 'Voluntario',\n    dataIndex: 'voluntario',\n    key: 'voluntario'\n  }, {\n    title: 'Bloques minimos completados',\n    dataIndex: 'bloquesMinimos',\n    key: 'bloquesMinimos'\n  }, {\n    title: 'Bloques opcionales completados',\n    dataIndex: 'bloquesOpcionales',\n    key: 'bloquesOpcionales'\n  }, {\n    title: 'Entregas pendientes',\n    dataIndex: 'entregasPendientes',\n    key: 'entregasPendientes'\n  }];\n  const dataVoluntarios = voluntarios.map(voluntario => {\n    return {\n      key: voluntario.id,\n      total: '',\n      voluntario: voluntario.full_name,\n      bloquesMinimos: minimos(voluntario, bloques),\n      bloquesOpcionales: opcionales(voluntario, bloques),\n      entregasPendientes: pendientes(voluntario)\n    };\n  });\n  const dataSource = [...dataVoluntarios, {\n    key: 'total',\n    total: 'Total',\n    voluntario: voluntarios.length,\n    bloquesMinimos: totalMinimos(),\n    bloquesOpcionales: totalOpcionales(),\n    entregasPendientes: totalPendientes()\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Dashboard de \", (_user$sede = user.sede) === null || _user$sede === void 0 ? void 0 : _user$sede.nombre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: dataSource,\n      pagination: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DashboardGestor, \"kaMmuXPE6Yvl4NwKX1Fr0TaYcQ0=\", false, function () {\n  return [useSelector, useSelector, useAuthorize];\n});\n\n_c = DashboardGestor;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardGestor\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Gestor/DashboardGestor/index.jsx"],"names":["React","useEffect","useState","useSelector","axios","Table","totalMinimos","totalOpcionales","totalPendientes","minimos","opcionales","pendientes","useAuthorize","DashboardGestor","user","state","bloques","voluntarios","setVoluntarios","get","sedeId","then","res","data","filter","voluntario","rolId","catch","err","columns","title","dataIndex","key","dataVoluntarios","map","id","total","full_name","bloquesMinimos","bloquesOpcionales","entregasPendientes","dataSource","length","sede","nombre"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport axios from 'axios'\nimport { Table } from 'antd'\nimport { totalMinimos, totalOpcionales, totalPendientes, minimos, opcionales, pendientes } from './dashUtils'\nimport useAuthorize from '../../../utils/authorization'\n\nexport default function DashboardGestor() {\n\n    const user = useSelector(state => state.user)\n    const bloques = useSelector(state => state.bloques)\n    const [voluntarios, setVoluntarios] = useState([])\n\n    useEffect(() => {\n\n        axios.get(`/api/users/sede/${user.sedeId}`)\n        .then(res => res.data)\n        .then(voluntarios => setVoluntarios(voluntarios.filter(voluntario => voluntario.rolId > 2)))\n        .catch(err => err)\n    }, [user, bloques])\n\n    useAuthorize(user, 2)\n\n    const columns = [\n        {\n            title: '',\n            dataIndex: 'total',\n            key: 'total',\n        },\n        {\n            title: 'Voluntario',\n            dataIndex: 'voluntario',\n            key: 'voluntario',\n        },\n        {\n            title: 'Bloques minimos completados',\n            dataIndex: 'bloquesMinimos',\n            key: 'bloquesMinimos',\n        },\n        {\n            title: 'Bloques opcionales completados',\n            dataIndex: 'bloquesOpcionales',\n            key: 'bloquesOpcionales',\n        },\n        {\n            title: 'Entregas pendientes',\n            dataIndex: 'entregasPendientes',\n            key: 'entregasPendientes',\n        }\n    ]\n    \n    const dataVoluntarios = voluntarios.map(voluntario => {\n        return (\n          {\n            key: voluntario.id,\n            total: '',\n            voluntario: voluntario.full_name,\n            bloquesMinimos: minimos(voluntario, bloques),\n            bloquesOpcionales: opcionales(voluntario, bloques),\n            entregasPendientes: pendientes(voluntario),\n          }\n        )\n      })\n    \n    const dataSource = [...dataVoluntarios, {\n        \n            key: 'total',\n            total: 'Total',\n            voluntario: voluntarios.length,\n            bloquesMinimos: totalMinimos(),\n            bloquesOpcionales: totalOpcionales(),\n            entregasPendientes: totalPendientes(),\n          \n    }]\n\n    return (\n        <div>\n            <h1>Dashboard de {user.sede?.nombre}</h1>\n            <Table columns={columns} dataSource={dataSource} pagination={false} />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}