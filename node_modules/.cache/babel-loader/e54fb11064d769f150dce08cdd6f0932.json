{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminRoles/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { getRoles } from \"../../../redux/roles\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport Roles from \"./Roles\";\nimport useAuthorize from \"../../../utils/authorization\";\nimport \"./index.css\";\nimport { message, Input, Form, Button } from \"antd\";\nimport isValid from \"../../../utils/specialChars\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminRoles() {\n  _s();\n\n  const [form, setForm] = useState({});\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n\n  const handleSubmit = () => {\n    if (!isValid(form.tipo)) return message.error(\"No se permiten caracteres especiales\");\n    axios.post(\"/api/roles/\", form).then(res => {\n      if (res.data) {\n        message.success(\"Rol creado correctamente\");\n      }\n    }).then(() => dispatch(getRoles())).catch(err => message.error('Rol no creado'));\n  };\n\n  const handleChange = (obj1, obj2) => {\n    setForm(obj2);\n  };\n\n  const toggleForm = () => {\n    document.getElementById(\"newRole\").style.display = document.getElementById(\"newRole\").style.display === \"block\" ? \"none\" : \"block\";\n  };\n\n  useAuthorize(user, 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adminRoles\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"fs-2 text-secondary text-center p-5\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Gestionar roles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: toggleForm,\n      className: \"mb-5 p-3 fs-3 button-style green\",\n      children: \"Crear nuevo rol\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createRol\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        style: {\n          display: \"none\"\n        },\n        name: \"newRole\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        initialValues: {\n          remember: true\n        },\n        onValuesChange: (obj, obj2) => handleChange(obj, obj2),\n        onFinish: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Tipo de rol\",\n          name: \"tipo\",\n          children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            display: form.tipo ? \"block\" : \"none\"\n          },\n          htmlType: \"submit\",\n          type: \"submit\",\n          children: \"Crear rol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Roles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminRoles, \"jnpsFZb8OKPBq+bYxIW9HrcHWPg=\", false, function () {\n  return [useDispatch, useSelector, useAuthorize];\n});\n\n_c = AdminRoles;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoles\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminRoles/index.jsx"],"names":["getRoles","React","useState","useDispatch","axios","useSelector","Roles","useAuthorize","message","Input","Form","Button","isValid","AdminRoles","form","setForm","dispatch","user","state","handleSubmit","tipo","error","post","then","res","data","success","catch","err","handleChange","obj1","obj2","toggleForm","document","getElementById","style","display","span","remember","obj"],"mappings":"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","sourcesContent":["import { getRoles } from \"../../../redux/roles\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport Roles from \"./Roles\";\nimport useAuthorize from \"../../../utils/authorization\";\nimport \"./index.css\";\nimport { message, Input, Form, Button } from \"antd\";\nimport isValid from \"../../../utils/specialChars\";\n\nexport default function AdminRoles() {\n  const [form, setForm] = useState({});\n\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => state.user);\n\n  const handleSubmit = () => {\n    if(!isValid(form.tipo)) return message.error(\"No se permiten caracteres especiales\")\n    axios.post(\"/api/roles/\", form)\n    .then((res) => {\n      if(res.data){\n        message.success(\"Rol creado correctamente\");\n      }\n    })\n    .then(()=> dispatch(getRoles()))\n    .catch(err => message.error('Rol no creado'))\n  };\n\n  const handleChange = (obj1, obj2) => {\n    setForm(obj2);\n  };\n\n  const toggleForm = () => {\n    document.getElementById(\"newRole\").style.display =\n      document.getElementById(\"newRole\").style.display === \"block\"\n        ? \"none\"\n        : \"block\";\n  };\n\n  useAuthorize(user, 1);\n\n  return (\n    <div className=\"adminRoles\">\n      <h1 className=\"fs-2 text-secondary text-center p-5\">\n        <strong>Gestionar roles</strong>\n      </h1>\n      <button\n        type=\"button\"\n        onClick={toggleForm}\n        className=\"mb-5 p-3 fs-3 button-style green\"\n      >\n        Crear nuevo rol\n      </button>\n      <div className=\"createRol\">\n      <Form\n        style={{ display: \"none\" }}\n        name=\"newRole\"\n        labelCol={{\n          span: 8,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n        initialValues={{\n          remember: true,\n        }}\n        onValuesChange={(obj, obj2) => handleChange(obj, obj2)}\n        onFinish={handleSubmit}\n      >\n        <Form.Item label=\"Tipo de rol\" name=\"tipo\">\n          <Input.TextArea />\n        </Form.Item>\n\n        <Button\n          style={{ display: form.tipo ? \"block\" : \"none\" }}\n          htmlType=\"submit\"\n          type=\"submit\"\n        >\n          Crear rol\n        </Button>\n      </Form>\n      </div>\n      <Roles />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}