{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminSedes/index.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getSedes } from \"../../../redux/sedes\";\nimport Sedes from \"./Sedes\";\nimport { Button, Form, Input } from \"antd\";\nimport { message } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AdminSedes() {\n  _s();\n\n  const [form, setForm] = useState({});\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector(state => state.user);\n\n  if (user.rolId && user.rolId !== 1) {\n    history.push(\"/unauthorized\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No autorizado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  const onFinish = id => {\n    axios.post(`/api/sedes/`, form).then(res => res.data).then(() => dispatch(getSedes()));\n    message.success(\"Sede creada correctamente\");\n  };\n\n  const handleChange = e => {\n    setForm({\n      nombre: e.target.value\n    });\n  };\n\n  const toggleForm = () => {\n    document.getElementById(\"newSede\").style.display = document.getElementById(\"newSede\").style.display === \"block\" ? \"none\" : \"block\";\n  };\n\n  useAuthorize(user, 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gestionar sedes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      onClick: toggleForm,\n      children: \"Crear nueva sede\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        display: \"none\"\n      },\n      name: \"newSede\",\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 8\n      },\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      children: /*#__PURE__*/_jsxDEV(Form.Item, {\n        onChange: handleChange,\n        label: \"nombre\",\n        name: \"nombre\"\n        /* rules={[\n          {\n            required: true,\n            message: \"Ingrese el nombre de la sede\",\n          },\n        ]} */\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            display: form.nombre ? \"block\" : \"none\"\n          },\n          htmlType: \"submit\",\n          type: \"submit\",\n          children: \"Crear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sedes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminSedes, \"XMabeVIvnThZs+aYmc27igdOdYo=\", true, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = AdminSedes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminSedes\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminSedes/index.jsx"],"names":["axios","React","useState","useDispatch","useSelector","useHistory","getSedes","Sedes","Button","Form","Input","message","AdminSedes","form","setForm","dispatch","history","user","state","rolId","push","onFinish","id","post","then","res","data","success","handleChange","e","nombre","target","value","toggleForm","document","getElementById","style","display","useAuthorize","span","remember"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getSedes } from \"../../../redux/sedes\";\nimport Sedes from \"./Sedes\";\nimport { Button, Form, Input } from \"antd\";\nimport { message } from \"antd\";\n\nexport default function AdminSedes() {\n  const [form, setForm] = useState({});\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const user = useSelector((state) => state.user);\n\n  if (user.rolId && user.rolId !== 1) {\n    history.push(\"/unauthorized\");\n    return (\n      <>\n        <h1>No autorizado</h1>\n      </>\n    );\n  }\n\n  const onFinish = (id) => {\n    axios\n      .post(`/api/sedes/`, form)\n      .then((res) => res.data)\n      .then(() => dispatch(getSedes()));\n\n      message.success(\"Sede creada correctamente\")\n\n  };\n\n  const handleChange = (e) => {\n      setForm({ nombre: e.target.value });\n  };\n\n  const toggleForm = () => {\n    document.getElementById(\"newSede\").style.display =\n      document.getElementById(\"newSede\").style.display === \"block\"\n        ? \"none\"\n        : \"block\";\n  };\n\n  useAuthorize(user, 1)\n\n  return (\n    <div>\n      <h1>Gestionar sedes</h1>\n      <Button type=\"button\" onClick={toggleForm}>\n        Crear nueva sede\n      </Button>\n      <Form\n        style={{ display: \"none\" }}\n        name=\"newSede\"\n        labelCol={{\n          span: 6,\n        }}\n        wrapperCol={{\n          span: 8,\n        }}\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          onChange={handleChange}\n          label=\"nombre\"\n          name=\"nombre\"\n          /* rules={[\n            {\n              required: true,\n              message: \"Ingrese el nombre de la sede\",\n            },\n          ]} */\n        >\n          <Input.TextArea/>\n          <Button  style={{ display: form.nombre? \"block\" : \"none\" }} htmlType=\"submit\" type=\"submit\">\n            Crear\n          </Button>\n        </Form.Item>\n      </Form>\n      <Sedes />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}