{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminRoles/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { getRoles } from '@testing-library/react';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { useHistory } from 'react-router';\nimport { useSelector } from 'react-redux';\nimport Roles from './Roles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AdminRoles() {\n  _s();\n\n  const [form, setForm] = useState({});\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector(state => state.user);\n\n  if (user.rolId && user.rolId !== 1) {\n    history.push(\"/unauthorized\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No autorizado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 18\n      }, this)\n    }, void 0, false);\n  }\n\n  const handleSubmit = id => {\n    axios.post('/api/roles/', form).then(res => res.data).then(() => {\n      dispatch(getRoles());\n    });\n  };\n\n  const handleChange = e => {\n    setForm({\n      tipo: e.target.value\n    });\n  };\n\n  const toggleForm = () => {\n    document.getElementById('newRole').style.display = document.getElementById('newRole').style.display === 'block' ? 'none' : 'block';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gestionar roles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: toggleForm,\n      children: \"Crear nuevo rol\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      id: \"newRole\",\n      style: {\n        display: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nombre\",\n        children: \"Tipo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"text\",\n        name: \"tipo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Crear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Roles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminRoles, \"FwzucGwWr7zlyc6uJStUfQCUlcw=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = AdminRoles;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoles\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminRoles/index.jsx"],"names":["getRoles","React","useState","useDispatch","axios","useHistory","useSelector","Roles","AdminRoles","form","setForm","dispatch","history","user","state","rolId","push","handleSubmit","id","post","then","res","data","handleChange","e","tipo","target","value","toggleForm","document","getElementById","style","display"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,wBAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAMQ,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;;AAEA,MAAIA,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACE,KAAL,KAAe,CAAjC,EAAoC;AAChCH,IAAAA,OAAO,CAACI,IAAR,CAAa,eAAb;AACA,wBAAO;AAAA,6BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAF,qBAAP;AACH;;AAED,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AACzBd,IAAAA,KAAK,CAACe,IAAN,CAAW,aAAX,EAA0BV,IAA1B,EACCW,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IADjB,EAECF,IAFD,CAEM,MAAM;AACRT,MAAAA,QAAQ,CAACX,QAAQ,EAAT,CAAR;AAAqB,KAHzB;AAIH,GALD;;AAOA,QAAMuB,YAAY,GAAIC,CAAD,IAAO;AACxBd,IAAAA,OAAO,CAAC;AAACe,MAAAA,IAAI,EAAED,CAAC,CAACE,MAAF,CAASC;AAAhB,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrBC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyCC,OAAzC,GAAmDH,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyCC,OAAzC,KAAqD,OAArD,GAA+D,MAA/D,GAAwE,OAA3H;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEJ,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAM,MAAA,QAAQ,EAAEX,YAAhB;AAA8B,MAAA,EAAE,EAAC,SAAjC;AAA2C,MAAA,KAAK,EAAE;AAACe,QAAAA,OAAO,EAAE;AAAV,OAAlD;AAAA,8BACgB;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADhB,eAEgB;AAAO,QAAA,QAAQ,EAAET,YAAjB;AAA+B,QAAA,IAAI,EAAC,MAApC;AAA2C,QAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFhB,eAGgB;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAQI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAxCuBf,U;UAGHL,W,EACDE,U,EAEHC,W;;;KANOE,U","sourcesContent":["import { getRoles } from '@testing-library/react'\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport axios from 'axios'\nimport { useHistory } from 'react-router'\nimport { useSelector } from 'react-redux'\nimport Roles from './Roles'\n\nexport default function AdminRoles() {\n    const [form, setForm] = useState({})\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const user = useSelector(state => state.user)\n\n    if (user.rolId && user.rolId !== 1) {\n        history.push(\"/unauthorized\");\n        return <><h1>No autorizado</h1></>;\n    }\n\n    const handleSubmit = (id) => {\n        axios.post('/api/roles/', form)\n        .then(res => res.data)\n        .then(() => {\n            dispatch(getRoles())})\n    }\n\n    const handleChange = (e) => {\n        setForm({tipo: e.target.value})\n    }\n\n    const toggleForm = () => {\n        document.getElementById('newRole').style.display = document.getElementById('newRole').style.display === 'block' ? 'none' : 'block'\n    }\n\n    return (\n        <div>\n            <h1>Gestionar roles</h1>\n            <button type='button' onClick={toggleForm}>Crear nuevo rol</button>\n            <form onSubmit={handleSubmit} id='newRole' style={{display: 'none'}}>\n                            <label htmlFor='nombre'>Tipo</label>\n                            <input onChange={handleChange} type='text' name='tipo' ></input>\n                            <button type='submit'>Crear</button>\n                        </form>\n            <Roles />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}