{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Gestor/DashboardGestor/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Table } from \"antd\";\nimport { totalMinimos, totalOpcionales, totalPendientes, minimos, opcionales, pendientes } from \"./dashUtils\";\nimport useAuthorize from \"../../../utils/authorization\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DashboardGestor() {\n  _s();\n\n  var _user$sede;\n\n  const user = useSelector(state => state.user);\n  const bloques = useSelector(state => state.bloques);\n  const [voluntarios, setVoluntarios] = useState([]);\n  useEffect(() => {\n    axios.get(`/api/users/sede/${user.sedeId}`).then(res => res.data).then(voluntarios => setVoluntarios(voluntarios.filter(voluntario => voluntario.rolId > 2))).catch(err => err);\n  }, [user, bloques]);\n  useAuthorize(user, 2);\n  const dataVoluntarios = voluntarios.map(voluntario => {\n    return {\n      key: voluntario.id,\n      total: \"\",\n      voluntario: voluntario.full_name,\n      bloquesMinimos: minimos(voluntario, bloques),\n      bloquesOpcionales: opcionales(voluntario, bloques),\n      entregasPendientes: pendientes(voluntario)\n    };\n  });\n  const columns = [{\n    title: \"Entregas pendientes por voluntario\",\n    render: record => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [record.voluntario, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), record.entregasPendientes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this),\n    responsive: [\"xs\"]\n  }, {\n    title: '',\n    dataIndex: 'total',\n    key: 'total',\n    responsive: [\"xs\"]\n  }, {\n    title: '',\n    dataIndex: 'total',\n    key: 'total',\n    responsive: [\"sm\"]\n  }, {\n    title: 'Voluntario',\n    dataIndex: 'voluntario',\n    key: 'voluntario',\n    responsive: ['sm']\n  }, {\n    title: 'Bloques minimos completados',\n    dataIndex: 'bloquesMinimos',\n    key: 'bloquesMinimos',\n    responsive: ['sm']\n  }, {\n    title: 'Bloques opcionales completados',\n    dataIndex: 'bloquesOpcionales',\n    key: 'bloquesOpcionales',\n    responsive: ['sm']\n  }, {\n    title: 'Entregas pendientes',\n    dataIndex: 'entregasPendientes',\n    key: 'entregasPendientes',\n    responsive: ['sm']\n  }];\n  const dataSource = [...dataVoluntarios, {\n    key: 'total',\n    total: 'Total',\n    voluntario: voluntarios.length,\n    bloquesMinimos: totalMinimos(voluntarios, bloques),\n    bloquesOpcionales: totalOpcionales(voluntarios, bloques),\n    entregasPendientes: totalPendientes(voluntarios)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Dashboard de \", (_user$sede = user.sede) === null || _user$sede === void 0 ? void 0 : _user$sede.nombre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: dataSource,\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DashboardGestor, \"kaMmuXPE6Yvl4NwKX1Fr0TaYcQ0=\", false, function () {\n  return [useSelector, useSelector, useAuthorize];\n});\n\n_c = DashboardGestor;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardGestor\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Gestor/DashboardGestor/index.jsx"],"names":["React","useEffect","useState","useSelector","axios","Table","totalMinimos","totalOpcionales","totalPendientes","minimos","opcionales","pendientes","useAuthorize","DashboardGestor","user","state","bloques","voluntarios","setVoluntarios","get","sedeId","then","res","data","filter","voluntario","rolId","catch","err","dataVoluntarios","map","key","id","total","full_name","bloquesMinimos","bloquesOpcionales","entregasPendientes","columns","title","render","record","responsive","dataIndex","dataSource","length","sede","nombre"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SACEC,YADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,OAJF,EAKEC,UALF,EAMEC,UANF,QAOO,aAPP;AAQA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AAAA;;AACxC,QAAMC,IAAI,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAME,OAAO,GAAGb,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAA3B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFe,GADH,CACQ,mBAAkBL,IAAI,CAACM,MAAO,EADtC,EAEGC,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAFrB,EAGGF,IAHH,CAGSJ,WAAD,IACJC,cAAc,CAACD,WAAW,CAACO,MAAZ,CAAoBC,UAAD,IAAgBA,UAAU,CAACC,KAAX,GAAmB,CAAtD,CAAD,CAJlB,EAMGC,KANH,CAMUC,GAAD,IAASA,GANlB;AAOD,GARQ,EAQN,CAACd,IAAD,EAAOE,OAAP,CARM,CAAT;AAUAJ,EAAAA,YAAY,CAACE,IAAD,EAAO,CAAP,CAAZ;AAGA,QAAMe,eAAe,GAAGZ,WAAW,CAACa,GAAZ,CAAiBL,UAAD,IAAgB;AACtD,WAAO;AACLM,MAAAA,GAAG,EAAEN,UAAU,CAACO,EADX;AAELC,MAAAA,KAAK,EAAE,EAFF;AAGLR,MAAAA,UAAU,EAAEA,UAAU,CAACS,SAHlB;AAILC,MAAAA,cAAc,EAAE1B,OAAO,CAACgB,UAAD,EAAaT,OAAb,CAJlB;AAKLoB,MAAAA,iBAAiB,EAAE1B,UAAU,CAACe,UAAD,EAAaT,OAAb,CALxB;AAMLqB,MAAAA,kBAAkB,EAAE1B,UAAU,CAACc,UAAD;AANzB,KAAP;AAQD,GATuB,CAAxB;AAWE,QAAMa,OAAO,GAAG,CACZ;AACIC,IAAAA,KAAK,EAAE,oCADX;AAEIC,IAAAA,MAAM,EAAGC,MAAD,iBACN,QAAC,KAAD,CAAO,QAAP;AAAA,iBACGA,MAAM,CAAChB,UADV,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGgB,MAAM,CAACJ,kBAHV;AAAA;AAAA;AAAA;AAAA;AAAA,YAHN;AASIK,IAAAA,UAAU,EAAE,CAAC,IAAD;AAThB,GADY,EAYV;AACEH,IAAAA,KAAK,EAAE,EADT;AAEEI,IAAAA,SAAS,EAAE,OAFb;AAGEZ,IAAAA,GAAG,EAAE,OAHP;AAIEW,IAAAA,UAAU,EAAE,CAAC,IAAD;AAJd,GAZU,EAkBZ;AACIH,IAAAA,KAAK,EAAE,EADX;AAEII,IAAAA,SAAS,EAAE,OAFf;AAGIZ,IAAAA,GAAG,EAAE,OAHT;AAIIW,IAAAA,UAAU,EAAE,CAAC,IAAD;AAJhB,GAlBY,EAwBZ;AACIH,IAAAA,KAAK,EAAE,YADX;AAEII,IAAAA,SAAS,EAAE,YAFf;AAGIZ,IAAAA,GAAG,EAAE,YAHT;AAIIW,IAAAA,UAAU,EAAE,CAAC,IAAD;AAJhB,GAxBY,EA8BZ;AACIH,IAAAA,KAAK,EAAE,6BADX;AAEII,IAAAA,SAAS,EAAE,gBAFf;AAGIZ,IAAAA,GAAG,EAAE,gBAHT;AAIIW,IAAAA,UAAU,EAAE,CAAC,IAAD;AAJhB,GA9BY,EAoCZ;AACIH,IAAAA,KAAK,EAAE,gCADX;AAEII,IAAAA,SAAS,EAAE,mBAFf;AAGIZ,IAAAA,GAAG,EAAE,mBAHT;AAIIW,IAAAA,UAAU,EAAE,CAAC,IAAD;AAJhB,GApCY,EA0CZ;AACIH,IAAAA,KAAK,EAAE,qBADX;AAEII,IAAAA,SAAS,EAAE,oBAFf;AAGIZ,IAAAA,GAAG,EAAE,oBAHT;AAIIW,IAAAA,UAAU,EAAE,CAAC,IAAD;AAJhB,GA1CY,CAAhB;AAkDA,QAAME,UAAU,GAAG,CAAC,GAAGf,eAAJ,EAAqB;AAEhCE,IAAAA,GAAG,EAAE,OAF2B;AAGhCE,IAAAA,KAAK,EAAE,OAHyB;AAIhCR,IAAAA,UAAU,EAAER,WAAW,CAAC4B,MAJQ;AAKhCV,IAAAA,cAAc,EAAE7B,YAAY,CAACW,WAAD,EAAcD,OAAd,CALI;AAMhCoB,IAAAA,iBAAiB,EAAE7B,eAAe,CAACU,WAAD,EAAcD,OAAd,CANF;AAOhCqB,IAAAA,kBAAkB,EAAE7B,eAAe,CAACS,WAAD;AAPH,GAArB,CAAnB;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA,gDAAkBH,IAAI,CAACgC,IAAvB,+CAAkB,WAAWC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,OAAO,EAAET,OAAhB;AAAyB,QAAA,UAAU,EAAEM,UAArC;AAAiD,QAAA,UAAU,EAAE;AAA7D;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAjGuB/B,e;UACTV,W,EACGA,W,EAahBS,Y;;;KAfsBC,e","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Table } from \"antd\";\nimport {\n  totalMinimos,\n  totalOpcionales,\n  totalPendientes,\n  minimos,\n  opcionales,\n  pendientes,\n} from \"./dashUtils\";\nimport useAuthorize from \"../../../utils/authorization\";\n\nexport default function DashboardGestor() {\n  const user = useSelector((state) => state.user);\n  const bloques = useSelector((state) => state.bloques);\n  const [voluntarios, setVoluntarios] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`/api/users/sede/${user.sedeId}`)\n      .then((res) => res.data)\n      .then((voluntarios) =>\n        setVoluntarios(voluntarios.filter((voluntario) => voluntario.rolId > 2))\n      )\n      .catch((err) => err);\n  }, [user, bloques]);\n\n  useAuthorize(user, 2);\n\n\n  const dataVoluntarios = voluntarios.map((voluntario) => {\n    return {\n      key: voluntario.id,\n      total: \"\",\n      voluntario: voluntario.full_name,\n      bloquesMinimos: minimos(voluntario, bloques),\n      bloquesOpcionales: opcionales(voluntario, bloques),\n      entregasPendientes: pendientes(voluntario),\n    };\n  });\n  \n    const columns = [\n        {\n            title: \"Entregas pendientes por voluntario\",\n            render: (record) => (\n              <React.Fragment>\n                {record.voluntario}\n                <br />\n                {record.entregasPendientes}\n              </React.Fragment>\n            ),\n            responsive: [\"xs\"]\n          },\n          {\n            title: '',\n            dataIndex: 'total',\n            key: 'total',\n            responsive: [\"xs\"]\n        },\n        {\n            title: '',\n            dataIndex: 'total',\n            key: 'total',\n            responsive: [\"sm\"]\n        },\n        {\n            title: 'Voluntario',\n            dataIndex: 'voluntario',\n            key: 'voluntario',\n            responsive: ['sm']\n        },\n        {\n            title: 'Bloques minimos completados',\n            dataIndex: 'bloquesMinimos',\n            key: 'bloquesMinimos',\n            responsive: ['sm']\n        },\n        {\n            title: 'Bloques opcionales completados',\n            dataIndex: 'bloquesOpcionales',\n            key: 'bloquesOpcionales',\n            responsive: ['sm']\n        },\n        {\n            title: 'Entregas pendientes',\n            dataIndex: 'entregasPendientes',\n            key: 'entregasPendientes',\n            responsive: ['sm']\n        }\n    ]\n    \n    const dataSource = [...dataVoluntarios, {\n        \n            key: 'total',\n            total: 'Total',\n            voluntario: voluntarios.length,\n            bloquesMinimos: totalMinimos(voluntarios, bloques),\n            bloquesOpcionales: totalOpcionales(voluntarios, bloques),\n            entregasPendientes: totalPendientes(voluntarios),\n    }]\n\n    return (\n        <div className=\"dashboard\">\n            <h1>Dashboard de {user.sede?.nombre}</h1>\n            <div className='table'>\n            <Table columns={columns} dataSource={dataSource} pagination={false} />\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}