{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminUsers/Users.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUsers } from '../../../redux/users';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Users() {\n  _s();\n\n  const [rol, setRol] = useState(0);\n  const [users, setUsers] = useState([]);\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n  const location = useLocation();\n  const id = location.pathname.splice(16);\n  console.log('AIDI', id);\n  useEffect(() => {\n    axios.get(`/api/users/sede/${id}`);\n  }, []);\n\n  const handleChange = e => {\n    setRol(e.target.value);\n  };\n\n  const handleClick = (userId, rolId) => {\n    return axios.post('http://localhost:3001/api/roles/set/', {\n      userId,\n      rolId,\n      user\n    }).then(() => {});\n  }; // if (user.rolId && user.rolId !== 1) {\n  //   history.push(\"/unauthorized\");\n  //   return <><h1>No autorizado</h1></>;\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Users, \"yE2ccB0tKxz1hGMRpsQ8wqpxcug=\", false, function () {\n  return [useSelector, useHistory, useLocation];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminUsers/Users.jsx"],"names":["React","useState","useEffect","axios","useDispatch","useSelector","setUsers","useHistory","useLocation","Users","rol","setRol","users","user","state","history","location","id","pathname","splice","console","log","get","handleChange","e","target","value","handleClick","userId","rolId","post","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;;;AAEA,SAASC,KAAT,GAAkB;AAAA;;AAEd,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACW,KAAD,EAAQN,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMY,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAME,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,EAAE,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,MAAlB,CAAyB,EAAzB,CAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,EAApB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACmB,GAAN,CAAW,mBAAkBL,EAAG,EAAhC;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AACxBb,IAAAA,MAAM,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACnC,WAAO1B,KAAK,CAAC2B,IAAN,CAAW,sCAAX,EAAmD;AAACF,MAAAA,MAAD;AAASC,MAAAA,KAAT;AAAgBhB,MAAAA;AAAhB,KAAnD,EACNkB,IADM,CACD,MAAM,CACX,CAFM,CAAP;AAGH,GAJD,CAlBc,CAyBd;AACA;AACA;AACA;;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAhDQtB,K;UAIQJ,W,EACGE,U,EACCC,W;;;KANZC,K;AAkDT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useDispatch, useSelector} from 'react-redux'\nimport { setUsers } from '../../../redux/users'\nimport { useHistory, useLocation } from 'react-router-dom';\n\nfunction Users () {\n\n    const [rol, setRol] = useState(0);\n    const [users, setUsers] = useState([])\n    const user = useSelector(state => state.user)\n    const history = useHistory();\n    const location = useLocation()\n    const id = location.pathname.splice(16)\n    console.log('AIDI', id)\n\n    useEffect(() => {\n        axios.get(`/api/users/sede/${id}`)\n    }, [])\n\n    const handleChange = (e) => {\n        setRol(e.target.value)\n    }\n\n    const handleClick = (userId, rolId) => {\n        return axios.post('http://localhost:3001/api/roles/set/', {userId, rolId, user})\n        .then(() => {\n        })\n    }\n\n  \n    // if (user.rolId && user.rolId !== 1) {\n    //   history.push(\"/unauthorized\");\n    //   return <><h1>No autorizado</h1></>;\n    // }\n\n    return (\n        <div>\n            {/* {users && users.map(user => {\n                return (\n                    <div key={user.id}>\n                        <h2>Nombre: {user.full_name} Rol: {user.rol?.tipo}</h2>\n                        <label htmlFor='rol'>Seleccionar rol</label>\n                        <select onChange={handleChange}>\n                            <option>Seleccionar rol</option>\n                            <option value='2'>Gestor</option>\n                            <option value='3'>Referente Comunitario</option>\n                        </select>\n                        <button onClick={(e) => handleClick(user.id, parseInt(rol))} type='button'>Asignar rol</button>\n                    </div>\n                )\n            })} */}\n        </div>\n    )\n}\n\nexport default Users"]},"metadata":{},"sourceType":"module"}