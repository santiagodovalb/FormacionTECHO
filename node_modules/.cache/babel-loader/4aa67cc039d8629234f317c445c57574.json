{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Gestor/gestorVoluntarios/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction GestorVoluntarios() {\n  _s();\n\n  const [rol, setRol] = useState(0);\n  const [users, setUsers] = useState([]);\n  const user = useSelector(state => state.user);\n  const roles = useSelector(state => state.roles.filter(rol => rol.id !== 1));\n  const history = useHistory();\n  useEffect(() => {\n    axios.get(`/api/users/sede/${user.sedeId}`).then(res => res.data).then(users => setUsers(users.filter(userFilter => userFilter.id !== user.id)));\n  }, [user]);\n\n  const handleChange = e => {\n    setRol(e.target.value);\n  };\n\n  const handleClick = (userId, rolId) => {\n    return axios.post('http://localhost:3001/api/roles/set/', {\n      userId,\n      rolId,\n      user\n    }).then(() => {\n      axios.get(`/api/users/sede/${user.sedeId}`).then(res => res.data).then(users => setUsers(users.filter(userFilter => userFilter.id !== user.id)));\n    });\n  };\n\n  if (user.rolId && user.rolId !== 2) {\n    history.push(\"/unauthorized\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No autorizado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Administrar roles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), console.log('USERS', users), !users.length && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No hay voluntarios/gestores en esta sede\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 31\n    }, this), users && users.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Nombre: \", user.full_name, \" Rol: \", user.rol && user.rol.tipo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rol\",\n          children: \"Seleccionar rol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Seleccionar rol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), roles && roles.map(rol => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: rol.id,\n              children: [\" \", rol.tipo, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleClick(user.id, parseInt(rol)),\n          type: \"button\",\n          children: \"Asignar rol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GestorVoluntarios, \"h+TM4yuWpg75znZxGPI2bBmT+Fc=\", false, function () {\n  return [useSelector, useSelector, useHistory];\n});\n\n_c = GestorVoluntarios;\nexport default GestorVoluntarios;\n\nvar _c;\n\n$RefreshReg$(_c, \"GestorVoluntarios\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Gestor/gestorVoluntarios/index.jsx"],"names":["React","useState","useEffect","axios","useSelector","useDispatch","useHistory","GestorVoluntarios","rol","setRol","users","setUsers","user","state","roles","filter","id","history","get","sedeId","then","res","data","userFilter","handleChange","e","target","value","handleClick","userId","rolId","post","push","console","log","length","map","full_name","tipo","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useSelector, useDispatch} from 'react-redux'\nimport { useHistory} from 'react-router-dom';\n\n\n\nfunction GestorVoluntarios () {\n\n    const [rol, setRol] = useState(0);\n    const [users, setUsers] = useState([])\n    const user = useSelector(state => state.user)\n    const roles = useSelector(state=>state.roles.filter((rol)=> rol.id!==1))\n    const history = useHistory();\n\n    useEffect(() => {\n        axios.get(`/api/users/sede/${user.sedeId}`)\n        .then(res => res.data)\n        .then(users => setUsers(users.filter(userFilter=>userFilter.id !== user.id)))\n    }, [user])\n\n    const handleChange = (e) => {\n        setRol(e.target.value)\n    }\n\n \n\n    const handleClick = (userId, rolId) => {\n        return axios.post('http://localhost:3001/api/roles/set/', {userId, rolId, user}).then(()=>{\n            axios.get(`/api/users/sede/${user.sedeId}`)\n            .then(res => res.data)\n            .then(users => setUsers(users.filter(userFilter=>userFilter.id !== user.id)))\n        })\n    }\n\n  \n    if (user.rolId && user.rolId !== 2) {\n      history.push(\"/unauthorized\");\n      return <><h1>No autorizado</h1></>;\n    }\n\n    return (\n        <div>\n            <h1>Administrar roles</h1>\n            {console.log('USERS', users)}\n            {!users.length && <h1>No hay voluntarios/gestores en esta sede</h1>}\n            {users && users.map(user => {\n                return (\n                    <div key={user.id}>\n                        <h2>Nombre: {user.full_name} Rol: {user.rol && user.rol.tipo}</h2>\n                        <label htmlFor='rol'>Seleccionar rol</label>\n                        <select onChange={handleChange}>\n                            <option>Seleccionar rol</option>\n                            {roles && roles.map(rol=>{\n                                return(\n                                <option value={rol.id}> {rol.tipo} </option>\n                                )\n                            })}\n                        </select>\n                        <button onClick={(e) => handleClick(user.id, parseInt(rol))} type='button'>Asignar rol</button>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default GestorVoluntarios"]},"metadata":{},"sourceType":"module"}