{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminRoles/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { getRoles } from '@testing-library/react';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport Roles from './Roles';\nimport useAuthorize from \"../../../utils/authorization\";\nimport './index.css';\nimport { Table, Button, message } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminRoles() {\n  _s();\n\n  const [form, setForm] = useState({});\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post('/api/roles/', form).then(() => {\n      message.success(\"Rol creado correctamente\");\n      return dispatch(getRoles());\n    });\n  };\n\n  const handleChange = e => {\n    setForm({\n      tipo: e.target.value\n    });\n  };\n\n  const toggleForm = () => {\n    document.getElementById('newRole').style.display = document.getElementById('newRole').style.display === 'block' ? 'none' : 'block';\n  };\n\n  useAuthorize(user, 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adminRoles\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"fs-2 text-secondary text-center p-5\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Gestionar roles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: toggleForm,\n      className: \"mb-5 p-3 fs-3 button-style green\",\n      children: \"Crear nuevo rol\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      id: \"newRole\",\n      style: {\n        display: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nombre\",\n        children: \"Tipo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"text\",\n        name: \"tipo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Crear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Roles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminRoles, \"jnpsFZb8OKPBq+bYxIW9HrcHWPg=\", false, function () {\n  return [useDispatch, useSelector, useAuthorize];\n});\n\n_c = AdminRoles;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoles\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminRoles/index.jsx"],"names":["getRoles","React","useState","useDispatch","axios","useSelector","Roles","useAuthorize","Table","Button","message","AdminRoles","form","setForm","dispatch","user","state","handleSubmit","e","preventDefault","post","then","success","handleChange","tipo","target","value","toggleForm","document","getElementById","style","display"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,wBAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,aAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,QAAsC,MAAtC;;AAGA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAMY,IAAI,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;;AAEA,QAAME,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAf,IAAAA,KAAK,CAACgB,IAAN,CAAW,aAAX,EAA0BR,IAA1B,EACCS,IADD,CACM,MAAM;AACRX,MAAAA,OAAO,CAACY,OAAR,CAAgB,0BAAhB;AACA,aAAOR,QAAQ,CAACd,QAAQ,EAAT,CAAf;AAA4B,KAHhC;AAIH,GAND;;AAQA,QAAMuB,YAAY,GAAIL,CAAD,IAAO;AACxBL,IAAAA,OAAO,CAAC;AAACW,MAAAA,IAAI,EAAEN,CAAC,CAACO,MAAF,CAASC;AAAhB,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrBC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyCC,OAAzC,GAAmDH,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyCC,OAAzC,KAAqD,OAArD,GAA+D,MAA/D,GAAwE,OAA3H;AACH,GAFD;;AAIAxB,EAAAA,YAAY,CAACQ,IAAD,EAAO,CAAP,CAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,qCAAd;AAAA,6BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YADJ,eAIF;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,OAAO,EAAEY,UAFb;AAGI,MAAA,SAAS,EAAC,kCAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJE,eAWI;AAAM,MAAA,QAAQ,EAAEV,YAAhB;AAA8B,MAAA,EAAE,EAAC,SAAjC;AAA2C,MAAA,KAAK,EAAE;AAACc,QAAAA,OAAO,EAAE;AAAV,OAAlD;AAAA,8BACgB;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADhB,eAEgB;AAAO,QAAA,QAAQ,EAAER,YAAjB;AAA+B,QAAA,IAAI,EAAC,MAApC;AAA2C,QAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFhB,eAGgB;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAgBI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA7CuBZ,U;UAGHR,W,EAEJE,W,EAkBbE,Y;;;KAvBoBI,U","sourcesContent":["import { getRoles } from '@testing-library/react'\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport axios from 'axios'\nimport { useSelector } from 'react-redux'\nimport Roles from './Roles'\nimport useAuthorize from \"../../../utils/authorization\";\nimport './index.css'\nimport { Table, Button, message} from \"antd\";\n\n\nexport default function AdminRoles() {\n    const [form, setForm] = useState({})\n\n    const dispatch = useDispatch()\n\n    const user = useSelector(state => state.user)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        axios.post('/api/roles/', form)\n        .then(() => {\n            message.success(\"Rol creado correctamente\");\n            return dispatch(getRoles())})\n    }\n\n    const handleChange = (e) => {\n        setForm({tipo: e.target.value})\n    }\n\n    const toggleForm = () => {\n        document.getElementById('newRole').style.display = document.getElementById('newRole').style.display === 'block' ? 'none' : 'block'\n    }\n\n    useAuthorize(user, 1)\n\n    return (\n        <div className='adminRoles'>\n            <h1 className=\"fs-2 text-secondary text-center p-5\">\n        <strong>Gestionar roles</strong>\n      </h1>\n      <button\n          type=\"button\"\n          onClick={toggleForm}\n          className=\"mb-5 p-3 fs-3 button-style green\"\n        >\n          Crear nuevo rol\n        </button>\n            <form onSubmit={handleSubmit} id='newRole' style={{display: 'none'}}>\n                            <label htmlFor='nombre'>Tipo</label>\n                            <input onChange={handleChange} type='text' name='tipo' ></input>\n                            <button type='submit'>Crear</button>\n                        </form>\n            <Roles />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}