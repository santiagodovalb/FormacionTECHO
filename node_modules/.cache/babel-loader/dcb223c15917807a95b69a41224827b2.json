{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Gestor/gestorContent/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updatePassword } from \"../../../redux/users\";\nimport { message } from \"antd\";\nimport { Form, Input, Button } from \"antd\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\nimport \"./styles.css\";\nimport useAuthorize from \"../../../utils/authorization\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GestorContent = () => {\n  _s();\n\n  const [form, setForm] = useState({\n    password: \"\",\n    newPassword: \"\",\n    newPasswordConfirm: \"\"\n  });\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  useAuthorize(user, 2);\n\n  const onChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setForm({ ...form,\n      [id]: value\n    });\n  };\n\n  const onSubmit = async () => {\n    if (form.newPassword === form.newPasswordConfirm) {\n      await dispatch(updatePassword({\n        id: user.id,\n        oldP: form.password,\n        newP: form.newPassword\n      })).then(data => {\n        if (!data.payload) message.error(\"Bad credentials\");else {\n          message.success(\"Password changed\");\n        }\n      });\n    }\n  };\n\n  const layout = {\n    labelCol: {\n      span: 16\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"change_password_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"fs-3 text-secondary m-5\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Cambiar contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, { ...layout,\n        initialValues: {\n          remember: true\n        },\n        onFinish: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          onChange: onChange,\n          label: \"Actual contrase\\xF1a:\",\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: \"Please input your password!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          onChange: onChange,\n          label: \"Nueva contrase\\xF1a:\",\n          name: \"newPassword\",\n          rules: [{\n            required: true,\n            message: \"Please input your password!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          onChange: onChange,\n          label: \"Confirm\\xE1 la nueva contrase\\xF1a\",\n          name: \"newPasswordConfirm\",\n          labelAlign: \"right-align\",\n          rules: [{\n            required: true,\n            message: \"Please input your password!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Cambiar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(GestorContent, \"FUzfbK4FUz9C8Jxa/sG0RZ9GrFM=\", false, function () {\n  return [useDispatch, useSelector, useAuthorize];\n});\n\n_c = GestorContent;\nexport default GestorContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"GestorContent\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Gestor/gestorContent/index.jsx"],"names":["React","useState","useSelector","useDispatch","updatePassword","message","Form","Input","Button","useAuthorize","GestorContent","form","setForm","password","newPassword","newPasswordConfirm","dispatch","user","state","onChange","e","id","value","target","onSubmit","oldP","newP","then","data","payload","error","success","layout","labelCol","span","wrapperCol","remember","required"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updatePassword } from \"../../../redux/users\";\nimport { message } from \"antd\";\nimport { Form, Input, Button } from \"antd\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\nimport \"./styles.css\";\nimport useAuthorize from \"../../../utils/authorization\";\n\nconst GestorContent = () => {\n  const [form, setForm] = useState({\n    password: \"\",\n    newPassword: \"\",\n    newPasswordConfirm: \"\",\n  });\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n\n  useAuthorize(user, 2);\n\n  const onChange = (e) => {\n    const { id, value } = e.target;\n    setForm({ ...form, [id]: value });\n  };\n\n  const onSubmit = async () => {\n    if (form.newPassword === form.newPasswordConfirm) {\n      await dispatch(\n        updatePassword({\n          id: user.id,\n          oldP: form.password,\n          newP: form.newPassword,\n        })\n      ).then((data) => {\n        if (!data.payload) message.error(\"Bad credentials\");\n        else {\n          message.success(\"Password changed\");\n        }\n      });\n    }\n  };\n\n  const layout = {\n    labelCol: {\n      span: 16,\n    },\n    wrapperCol: {\n      span: 16,\n    },\n  };\n\n  return (\n    <>\n      <div className=\"change_password_div\">\n        <h1 className=\"fs-3 text-secondary m-5\">\n          <strong>Cambiar contraseña</strong>\n        </h1>\n        <Form\n          {...layout}\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onSubmit}\n        >\n          <Form.Item\n            onChange={onChange}\n            label=\"Actual contraseña:\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\",\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            onChange={onChange}\n            label=\"Nueva contraseña:\"\n            name=\"newPassword\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\",\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            onChange={onChange}\n            label=\"Confirmá la nueva contraseña\"\n            name=\"newPasswordConfirm\"\n            labelAlign=\"right-align\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\",\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Cambiar\n            </Button>\n          </Form.Item>\n        </Form>\n        </div>\n    </>\n  );\n};\n\nexport default GestorContent;\n"]},"metadata":{},"sourceType":"module"}