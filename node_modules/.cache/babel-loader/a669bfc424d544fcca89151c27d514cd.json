{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/adminDashboard/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Table } from 'antd';\nimport axios from 'axios';\nimport useAuthorize from '../../../utils/authorization';\nimport { minimosCompletados, opcionalesCompletados, minimosTotal, opcionalesTotal } from '../../Gestor/DashboardGestor/dashUtils';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminDashboard() {\n  _s();\n\n  const user = useSelector(state => state.user);\n  const sedes = useSelector(state => state.sedes);\n  const users = useSelector(state => state.users);\n  const bloques = useSelector(state => state.bloques);\n  const [voluntarios, setVoluntarios] = useState([]);\n  useAuthorize(user, 1);\n  useEffect(() => {\n    axios.get('/api/users/entregas').then(res => res.data).then(voluntarios => setVoluntarios(voluntarios.filter(voluntario => voluntario.rolId > 2))).catch(err => err);\n  }, [user, bloques]);\n  const columns = [{\n    title: '',\n    dataIndex: 'total',\n    key: 'total'\n  }, {\n    title: 'Sede',\n    dataIndex: 'sede',\n    key: 'sede'\n  }, {\n    title: 'Voluntarios',\n    dataIndex: 'voluntarios',\n    key: 'voluntarios'\n  }, {\n    title: 'Gestores',\n    dataIndex: 'gestores',\n    key: 'gestores'\n  }, {\n    title: 'Bloques minimos completados',\n    dataIndex: 'minimos',\n    key: 'minimos'\n  }, {\n    title: 'Bloques opcionales completados',\n    dataIndex: 'opcionales',\n    key: 'opcionales'\n  }];\n  const dataSource2 = sedes.map(sede => {\n    const usuarios = users.filter(user => user.sedeId === sede.id);\n    let minimosCompletos = 0;\n    let totalMinimos = 0;\n    let opcionalesCompletos = 0;\n    let totalOpcionales = 0;\n    let voluntariosDeSede = voluntarios.filter(voluntario => voluntario.sedeId === sede.id);\n    voluntariosDeSede.forEach(voluntarioDeSede => minimosCompletos = minimosCompletos + minimosCompletados(voluntarioDeSede));\n    voluntariosDeSede.forEach(voluntarioDeSede => opcionalesCompletos = opcionalesCompletos + opcionalesCompletados(voluntarioDeSede));\n    voluntariosDeSede.forEach(voluntarioDeSede => totalMinimos = totalMinimos + minimosTotal(voluntarioDeSede, bloques));\n    voluntariosDeSede.forEach(voluntarioDeSede => totalOpcionales = totalOpcionales + opcionalesTotal(voluntarioDeSede, bloques));\n    return {\n      key: sede.id,\n      total: '',\n      sede: sede.nombre,\n      voluntarios: usuarios.filter(user => user.rolId > 2).length,\n      gestores: usuarios.filter(user => user.rolId === 2).length,\n      minimos: `${minimosCompletos}/${totalMinimos}`,\n      opcionales: `${opcionalesCompletos}/${totalOpcionales}`\n    };\n  });\n\n  const totalMinimoCompletado = () => {\n    let total = 0;\n    voluntarios.forEach(voluntario => total = total + minimosCompletados(voluntario));\n    return total;\n  };\n\n  const totalOpcionalCompletado = () => {\n    let total = 0;\n    voluntarios.forEach(voluntario => total = total + opcionalesCompletados(voluntario));\n    return total;\n  };\n\n  const totalMinimo = () => {\n    let total = 0;\n    voluntarios.forEach(voluntario => total = total + minimosTotal(voluntario, bloques));\n    return total;\n  };\n\n  const totalOpcional = () => {\n    let total = 0;\n    voluntarios.forEach(voluntario => total = total + opcionalesTotal(voluntario, bloques));\n    return total;\n  };\n\n  const dataSource = [...dataSource2, {\n    key: 'total',\n    total: 'Total',\n    sede: sedes.length,\n    voluntarios: users.filter(user => user.rolId > 2).length,\n    gestores: users.filter(user => user.rolId === 2).length,\n    minimos: `${totalMinimoCompletado()}/${totalMinimo()}`,\n    opcionales: `${totalOpcionalCompletado()}/${totalOpcional()}`\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"fs-2 text-secondary\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Dashboard Nacional\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        dataSource: dataSource,\n        columns: columns,\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminDashboard, \"9eJY12hTOlMhjXECqOBVbwhTujM=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useAuthorize];\n});\n\n_c = AdminDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/adminDashboard/index.jsx"],"names":["React","useState","useEffect","useSelector","Table","axios","useAuthorize","minimosCompletados","opcionalesCompletados","minimosTotal","opcionalesTotal","AdminDashboard","user","state","sedes","users","bloques","voluntarios","setVoluntarios","get","then","res","data","filter","voluntario","rolId","catch","err","columns","title","dataIndex","key","dataSource2","map","sede","usuarios","sedeId","id","minimosCompletos","totalMinimos","opcionalesCompletos","totalOpcionales","voluntariosDeSede","forEach","voluntarioDeSede","total","nombre","length","gestores","minimos","opcionales","totalMinimoCompletado","totalOpcionalCompletado","totalMinimo","totalOpcional","dataSource"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport { useSelector } from 'react-redux'\nimport { Table } from 'antd'\nimport axios from 'axios'\nimport useAuthorize from '../../../utils/authorization'\nimport { minimosCompletados,opcionalesCompletados,minimosTotal,opcionalesTotal} from '../../Gestor/DashboardGestor/dashUtils'\nimport './index.css'\n\nexport default function AdminDashboard(){\n    const user = useSelector(state => state.user)\n    const sedes = useSelector(state=> state.sedes)\n    const users = useSelector(state => state.users)\n    const bloques = useSelector(state => state.bloques)\n    const [voluntarios, setVoluntarios] = useState([])\n    \n    useAuthorize(user, 1)\n    \n    \n    useEffect(() => {\n        \n        axios.get('/api/users/entregas')\n        .then(res => res.data)\n        .then(voluntarios => setVoluntarios(voluntarios.filter(voluntario => voluntario.rolId > 2)))\n        .catch(err => err)\n    }, [user,bloques])\n    const columns = [\n        {\n            title: '',\n            dataIndex: 'total',\n            key: 'total',\n        },\n        {\n            title: 'Sede',\n            dataIndex: 'sede',\n            key: 'sede',\n        },\n        {\n            title: 'Voluntarios',\n            dataIndex: 'voluntarios',\n            key: 'voluntarios',\n        },\n        {\n            title: 'Gestores',\n            dataIndex: 'gestores',\n            key:'gestores'\n        },\n        {\n            title: 'Bloques minimos completados',\n            dataIndex: 'minimos',\n            key:'minimos'\n        },\n        {\n            title: 'Bloques opcionales completados',\n            dataIndex: 'opcionales',\n            key:'opcionales'\n        },\n    ]\n\n\n\n\n    const dataSource2 = sedes.map((sede) => {\n        const usuarios = users.filter(user=>user.sedeId === sede.id)\n        let minimosCompletos = 0\n        let totalMinimos = 0\n        let opcionalesCompletos = 0\n        let totalOpcionales = 0\n        let voluntariosDeSede =  voluntarios.filter(voluntario=>voluntario.sedeId === sede.id)\n        voluntariosDeSede.forEach(voluntarioDeSede=> minimosCompletos = minimosCompletos + minimosCompletados(voluntarioDeSede))\n        voluntariosDeSede.forEach(voluntarioDeSede=> opcionalesCompletos = opcionalesCompletos + opcionalesCompletados(voluntarioDeSede))\n        voluntariosDeSede.forEach(voluntarioDeSede => totalMinimos = totalMinimos+minimosTotal(voluntarioDeSede,bloques) )\n        voluntariosDeSede.forEach(voluntarioDeSede => totalOpcionales = totalOpcionales+opcionalesTotal(voluntarioDeSede,bloques))\n        return {\n          key: sede.id,\n          total:'',\n          sede: sede.nombre,\n          voluntarios: usuarios.filter(user=> user.rolId > 2).length,\n          gestores: usuarios.filter(user=> user.rolId === 2).length,\n          minimos:`${minimosCompletos}/${totalMinimos}`,\n          opcionales: `${opcionalesCompletos}/${totalOpcionales}`\n        };\n      });\n\n\n      const totalMinimoCompletado= () =>{\n        let total = 0\n        voluntarios.forEach(voluntario=> total = total +minimosCompletados(voluntario))\n        return total\n      }\n\n      const totalOpcionalCompletado= () =>{\n        let total = 0\n        voluntarios.forEach(voluntario=> total = total +opcionalesCompletados(voluntario))\n        return total\n      }\n\n      const totalMinimo= () =>{\n        let total = 0\n        voluntarios.forEach(voluntario=> total = total +minimosTotal(voluntario,bloques))\n        return total\n      }\n\n      const totalOpcional= () =>{\n        let total = 0\n        voluntarios.forEach(voluntario=> total = total +opcionalesTotal(voluntario,bloques))\n        return total\n      }\n\n\n      const dataSource = [...dataSource2,{\n            key: 'total',\n            total: 'Total',\n            sede: sedes.length,\n            voluntarios: users.filter(user=> user.rolId >2).length,\n            gestores: users.filter(user=>user.rolId === 2).length,\n            minimos: `${totalMinimoCompletado()}/${totalMinimo()}`,\n            opcionales: `${totalOpcionalCompletado()}/${totalOpcional()}`,\n\n      }]\n\n    return (\n        <div className=' text-center'>\n            <h1 className=\"fs-2 text-secondary\">\n              <strong>Dashboard Nacional</strong>\n              </h1>\n              <div className='table'>\n            <Table bordered dataSource={dataSource} columns={columns} pagination={false} />\n            </div>\n        </div>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}