{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminRoles/Roles.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { getRoles } from \"../../../redux/roles\";\nimport { Table, Button, message } from \"antd\";\nimport useAuthorize from \"../../../utils/authorization\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Roles() {\n  _s();\n\n  const [form, setForm] = useState({});\n  const roles = useSelector(state => state.roles);\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n\n  const toggleForm = id => {\n    document.getElementById(id).style.display = document.getElementById(id).style.display === \"block\" ? \"none\" : \"block\";\n  };\n\n  const handleSubmit = (e, id) => {\n    e.preventDefault();\n    axios.post(`/api/roles/${id}`, form).then(res => res.data).then(() => dispatch(getRoles()));\n  };\n\n  const handleChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const alertaEliminar = Swal.mixin({\n    buttonsStyling: true\n  });\n\n  const handleDelete = id => {\n    alertaEliminar.fire({\n      title: \"Estás seguro?\",\n      text: \"Si lo confirmas, no podrás deshacerlo!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Si, borrar!\",\n      cancelButtonText: \"No, cancelar!\",\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      reverseButtons: true\n    }).then(result => {\n      if (result.isConfirmed) {\n        alertaEliminar.fire(\"Eliminado!\", \"El rol fue eliminado correctamente.\", \"success\");\n        axios.delete(`/api/roles/${id}`).then(() => dispatch(getRoles()));\n        message.success(\"Rol eliminada correctamente\");\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        alertaEliminar.fire(\"Cancelado\", \"El rol está a salvo\", \"error\");\n      }\n    });\n  };\n\n  useAuthorize(user, 1);\n  const dataSource = roles.map(rol => {\n    return {\n      key: rol.id,\n      tipo: rol.tipo\n    };\n  });\n  const columns = [{\n    title: \"Rol\",\n    dataIndex: \"tipo\",\n    key: \"tipo\"\n  }, {\n    title: \"Modificar/eliminar\",\n    key: \"modificar/eliminar\",\n    render: (text, record) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => toggleForm(`rolForm${record.key}`),\n          type: \"button\",\n          children: \"Modificar sede\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleSubmit(e, record.key),\n          id: `rolForm${record.key}`,\n          style: {\n            display: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nombre\",\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            type: \"text\",\n            name: \"nombre\",\n            placeholder: record.tipo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Confirmar cambios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDelete(record.key),\n          type: \"button\",\n          children: \"Eliminar rol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns,\n      pagination: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Roles, \"vyYpKaK98neBlcyXtcgUdLsmfcQ=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useAuthorize];\n});\n\n_c = Roles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Roles\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminRoles/Roles.jsx"],"names":["axios","React","useState","useDispatch","useSelector","Swal","getRoles","Table","Button","message","useAuthorize","Roles","form","setForm","roles","state","dispatch","user","toggleForm","id","document","getElementById","style","display","handleSubmit","e","preventDefault","post","then","res","data","handleChange","target","name","value","alertaEliminar","mixin","buttonsStyling","handleDelete","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","result","isConfirmed","delete","success","dismiss","DismissReason","cancel","dataSource","map","rol","key","tipo","columns","dataIndex","render","record"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { getRoles } from \"../../../redux/roles\";\nimport { Table, Button, message} from \"antd\";\nimport useAuthorize from \"../../../utils/authorization\";\n\nexport default function Roles() {\n  const [form, setForm] = useState({});\n\n  const roles = useSelector((state) => state.roles);\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n\n  const toggleForm = (id) => {\n    document.getElementById(id).style.display =\n      document.getElementById(id).style.display === \"block\" ? \"none\" : \"block\";\n  };\n\n  const handleSubmit = (e, id) => {\n      e.preventDefault()\n    axios\n      .post(`/api/roles/${id}`, form)\n      .then((res) => res.data)\n      .then(() => dispatch(getRoles()));\n  };\n\n  const handleChange = (e) => {\n    setForm({...form, [e.target.name]: e.target.value });\n  };\n\n  const alertaEliminar = Swal.mixin({\n    buttonsStyling: true,\n  });\n\n  const handleDelete = (id) => {\n    alertaEliminar\n      .fire({\n        title: \"Estás seguro?\",\n        text: \"Si lo confirmas, no podrás deshacerlo!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Si, borrar!\",\n        cancelButtonText: \"No, cancelar!\",\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        reverseButtons: true,\n      })\n      .then((result) => {\n        if (result.isConfirmed) {\n          alertaEliminar.fire(\n            \"Eliminado!\",\n            \"El rol fue eliminado correctamente.\",\n            \"success\"\n          );\n          axios.delete(`/api/roles/${id}`).then(() => dispatch(getRoles()));\n          message.success(\"Rol eliminada correctamente\")\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n          alertaEliminar.fire(\"Cancelado\", \"El rol está a salvo\", \"error\");\n        }\n      });\n  };\n\n  useAuthorize(user, 1)\n\n  const dataSource = roles.map((rol) => {\n    return {\n      key: rol.id,\n      tipo: rol.tipo\n    };\n  });\n\n  const columns = [\n    {\n      title: \"Rol\",\n      dataIndex: \"tipo\",\n      key: \"tipo\",\n    },\n    {\n      title: \"Modificar/eliminar\",\n      key: \"modificar/eliminar\",\n      render: (text, record) => {\n          return(\n        <div>\n          <Button\n            onClick={() => toggleForm(`rolForm${record.key}`)}\n            type=\"button\"\n          >\n            Modificar sede\n          </Button>\n          <form onSubmit={(e) => handleSubmit(e, record.key)} id={`rolForm${record.key}`} style={{display: 'none'}}>\n                            <label htmlFor='nombre'>Nombre</label>\n                            <input onChange={handleChange} type='text' name='nombre' placeholder={record.tipo}></input>\n                            <button type='submit'>Confirmar cambios</button>\n                        </form>\n          <Button onClick={() => handleDelete(record.key)} type='button'>Eliminar rol</Button>\n        </div>\n          )\n      },\n        \n    },\n  ];\n\n  return (\n    <div className='table'>\n      <Table bordered dataSource={dataSource} columns={columns} pagination={false} />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}