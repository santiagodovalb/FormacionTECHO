{"ast":null,"code":"import { createAsyncThunk, createReducer } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const setUserLogged = createAsyncThunk(\"SET-USER-LOGGED\", () => {\n  return axios.get(\"/api/users/me\").then(res => res.data).catch(err => err);\n});\nexport const setUser = createAsyncThunk(\"SET-USER\", x => {\n  return axios.post(\"/api/users/login\", x).then(res => res.data);\n});\nconst userLoggedReducer = createReducer({}, {\n  [setUserLogged.fulfilled]: (state, action) => action.payload,\n  [setUserLogged.rejected]: (state, action) => action.payload,\n  [setUser.fulfilled]: (state, action) => action.payload\n});\nexport default userLoggedReducer;","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/redux/login.js"],"names":["createAsyncThunk","createReducer","axios","setUserLogged","get","then","res","data","catch","err","setUser","x","post","userLoggedReducer","fulfilled","state","action","payload","rejected"],"mappings":"AAAA,SAASA,gBAAT,EAA4BC,aAA5B,QAAgD,kBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CAAE,iBAAF,EAAoB,MAAK;AAClE,SAAOE,KAAK,CAACE,GAAN,CAAU,eAAV,EAA2BC,IAA3B,CAAgCC,GAAG,IAAEA,GAAG,CAACC,IAAzC,EAA+CC,KAA/C,CAAqDC,GAAG,IAAIA,GAA5D,CAAP;AACH,CAF4C,CAAtC;AAIP,OAAO,MAAMC,OAAO,GAAGV,gBAAgB,CAAC,UAAD,EAAaW,CAAD,IAAK;AACpD,SAAOT,KAAK,CAACU,IAAN,CAAW,kBAAX,EAA+BD,CAA/B,EACCN,IADD,CACMC,GAAG,IAAGA,GAAG,CAACC,IADhB,CAAP;AAEH,CAHsC,CAAhC;AAKP,MAAMM,iBAAiB,GAAGZ,aAAa,CAAC,EAAD,EAAI;AACvC,GAACE,aAAa,CAACW,SAAf,GAA2B,CAACC,KAAD,EAAOC,MAAP,KAAkBA,MAAM,CAACC,OADb;AAEvC,GAACd,aAAa,CAACe,QAAf,GAA0B,CAACH,KAAD,EAAOC,MAAP,KAAkBA,MAAM,CAACC,OAFZ;AAGvC,GAACP,OAAO,CAACI,SAAT,GAAsB,CAACC,KAAD,EAAOC,MAAP,KAAkBA,MAAM,CAACC;AAHR,CAAJ,CAAvC;AAOA,eAAeJ,iBAAf","sourcesContent":["import { createAsyncThunk , createReducer} from \"@reduxjs/toolkit\";\nimport axios from \"axios\"\n\nexport const setUserLogged = createAsyncThunk (\"SET-USER-LOGGED\",() =>{\n    return axios.get(\"/api/users/me\").then(res=>res.data).catch(err => err)\n})\n\nexport const setUser = createAsyncThunk(\"SET-USER\",(x)=>{\n    return axios.post(\"/api/users/login\", x)\n           .then(res=> res.data)\n})\n\nconst userLoggedReducer = createReducer({},{\n    [setUserLogged.fulfilled]: (state,action) => action.payload,\n    [setUserLogged.rejected]: (state,action) => action.payload,\n    [setUser.fulfilled] : (state,action) => action.payload,\n})\n\n\nexport default userLoggedReducer"]},"metadata":{},"sourceType":"module"}