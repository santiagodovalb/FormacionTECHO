{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminRoles/Roles.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Roles() {\n  _s();\n\n  const [form, setForm] = useState({});\n  const roles = useSelector(state => state.roles);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector(state => state.user);\n\n  const toggleForm = id => {\n    console.log(document.getElementById(id));\n    document.getElementById(id).style.display = document.getElementById(id).style.display === 'block' ? 'none' : 'block';\n  };\n\n  const handleSubmit = id => {\n    axios.post(`/api/roles/`, form).then(res => res.data).then(() => dispatch(getSedes()));\n  };\n\n  const handleChange = e => {\n    setForm({\n      nombre: e.target.value\n    });\n  };\n\n  const handleDelete = id => {\n    axios.delete(`/api/roles/${id}`).then(() => dispatch(getRoles()));\n  };\n\n  if (user.rolId && user.rolId !== 1) {\n    history.push(\"/unauthorized\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No autorizado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 18\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: roles && roles.map(rol => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: rol.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleForm(`sedeForm${rol.id}`),\n          type: \"button\",\n          children: \"Modificar sede\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: () => handleSubmit(rol.id),\n          id: `sedeForm${rol.id}`,\n          style: {\n            display: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nombre\",\n            children: \"Tipo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            type: \"text\",\n            name: \"nombre\",\n            placeholder: rol.tipo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Confirmar cambios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(rol.id),\n          type: \"button\",\n          children: \"Borrar rol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Roles, \"fmEdR9ikUekh6q6cnr/OgRhb4gs=\", true, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Roles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Roles\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminRoles/Roles.jsx"],"names":["React","useState","useSelector","useDispatch","Roles","form","setForm","roles","state","dispatch","history","useHistory","user","toggleForm","id","console","log","document","getElementById","style","display","handleSubmit","axios","post","then","res","data","getSedes","handleChange","e","nombre","target","value","handleDelete","delete","getRoles","rolId","push","map","rol","tipo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\n\nexport default function Roles() {\n    const [form, setForm] = useState({})\n\n    const roles = useSelector(state => state.roles)\n    const dispatch = useDispatch()\n    const history = useHistory();\n    const user = useSelector(state => state.user)\n\n    const toggleForm = (id) => {\n        console.log(document.getElementById(id))\n        document.getElementById(id).style.display = document.getElementById(id).style.display === 'block' ? 'none' : 'block'\n    }\n\n    const handleSubmit = (id) => {\n        axios.post(`/api/roles/`, form)\n        .then(res => res.data)\n        .then(() => dispatch(getSedes()))\n    }\n\n    const handleChange = (e) => {\n        setForm({nombre: e.target.value})\n    }\n\n    const handleDelete = (id) => {\n        axios.delete(`/api/roles/${id}`)\n        .then(() => dispatch(getRoles()))\n    }\n\n    if (user.rolId && user.rolId !== 1) {\n        history.push(\"/unauthorized\");\n        return <><h1>No autorizado</h1></>;\n      }\n\n    return (\n        <div>\n            {roles && roles.map(rol => {\n                return (\n                    <div>\n                        <h3>{rol.nombre}</h3>\n                        <button onClick={() => toggleForm(`sedeForm${rol.id}`)} type='button'>Modificar sede</button>\n                        <form onSubmit={() => handleSubmit(rol.id)} id={`sedeForm${rol.id}`} style={{display: 'none'}}>\n                            <label htmlFor='nombre'>Tipo</label>\n                            <input onChange={handleChange} type='text' name='nombre' placeholder={rol.tipo}></input>\n                            <button type='submit'>Confirmar cambios</button>\n                        </form>\n                        <button onClick={() => handleDelete(rol.id)} type='button'>Borrar rol</button>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}