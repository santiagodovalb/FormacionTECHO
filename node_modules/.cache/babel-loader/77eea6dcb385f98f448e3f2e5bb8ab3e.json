{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/utils/authorization.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router\";\nimport React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function useAuthorize(permitted) {\n  _s();\n\n  const history = useHistory();\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n  const user = useSelector(state => state.user);\n\n  if (user.rolId === null || user.rolId !== permitted) {\n    history.push(\"/unauthorized\");\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No autorizado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(useAuthorize, \"+PPlOz2gMpoQJzCytY7lVN0/Pe0=\", false, function () {\n  return [useHistory, useSelector];\n});","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/utils/authorization.js"],"names":["useHistory","React","useSelector","useAuthorize","permitted","history","useEffect","effect","cleanup","input","user","state","rolId","push"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,eAAe,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;AAAA;;AAE5C,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACAM,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,MAAM;AACN,WAAO,MAAM;AACXC,MAAAA,OAAO;AACR,KAFD;AAGD,GALQ,EAKN,CAACC,KAAD,CALM,CAAT;AAMA,QAAMC,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;;AAEA,MAAIA,IAAI,CAACE,KAAL,KAAe,IAAf,IAAuBF,IAAI,CAACE,KAAL,KAAeR,SAA1C,EAAqD;AACjDC,IAAAA,OAAO,CAACQ,IAAR,CAAa,eAAb;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACN;;GAfuBV,Y;UAEJH,U,EAOHE,W","sourcesContent":["import { useHistory } from \"react-router\";\nimport React from 'react'\nimport { useSelector } from \"react-redux\";\n\nexport default function useAuthorize(permitted) {\n\n    const history = useHistory()\n    useEffect(() => {\n      effect\n      return () => {\n        cleanup\n      }\n    }, [input])\n    const user = useSelector(state => state.user)\n\n    if (user.rolId === null || user.rolId !== permitted) {\n        history.push(\"/unauthorized\");\n        return <h1>No autorizado</h1>;\n      }\n}"]},"metadata":{},"sourceType":"module"}