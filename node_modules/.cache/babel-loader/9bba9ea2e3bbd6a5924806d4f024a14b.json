{"ast":null,"code":"import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const setUserLogged = createAsyncThunk(\"SET-USER-LOGGED\", () => {\n  return axios.get(\"/api/users/me\").then(res => res.data);\n});\nexport const setUser = createAsyncThunk(\"SET-USER\", x => {\n  return axios.post(\"/api/users/login\", x).then(res => res.data);\n});\nconst userLoggedReducer = createReducer({}, {\n  [setUserLogged.fulfilled]: (state, action) => action.payload,\n  [setUser.fulfilled]: (state, action) => action.payload\n});\nexport default userLoggedReducer;","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/redux/login.js"],"names":["createAction","createReducer","axios","setUserLogged","createAsyncThunk","get","then","res","data","setUser","x","post","userLoggedReducer","fulfilled","state","action","payload"],"mappings":"AAAA,SAASA,YAAT,EAAwBC,aAAxB,QAA4C,kBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGC,gBAAgB,CAAE,iBAAF,EAAoB,MAAK;AAClE,SAAOF,KAAK,CAACG,GAAN,CAAU,eAAV,EAA2BC,IAA3B,CAAgCC,GAAG,IAAEA,GAAG,CAACC,IAAzC,CAAP;AACH,CAF4C,CAAtC;AAIP,OAAO,MAAMC,OAAO,GAAGL,gBAAgB,CAAC,UAAD,EAAaM,CAAD,IAAK;AACpD,SAAOR,KAAK,CAACS,IAAN,CAAW,kBAAX,EAA+BD,CAA/B,EACCJ,IADD,CACMC,GAAG,IAAGA,GAAG,CAACC,IADhB,CAAP;AAEH,CAHsC,CAAhC;AAKP,MAAMI,iBAAiB,GAAGX,aAAa,CAAC,EAAD,EAAI;AACvC,GAACE,aAAa,CAACU,SAAf,GAA2B,CAACC,KAAD,EAAOC,MAAP,KAAkBA,MAAM,CAACC,OADb;AAEvC,GAACP,OAAO,CAACI,SAAT,GAAsB,CAACC,KAAD,EAAOC,MAAP,KAAkBA,MAAM,CAACC;AAFR,CAAJ,CAAvC;AAMA,eAAeJ,iBAAf","sourcesContent":["import { createAction , createReducer} from \"@reduxjs/toolkit\";\nimport axios from \"axios\"\n\nexport const setUserLogged = createAsyncThunk (\"SET-USER-LOGGED\",() =>{\n    return axios.get(\"/api/users/me\").then(res=>res.data)\n})\n\nexport const setUser = createAsyncThunk(\"SET-USER\",(x)=>{\n    return axios.post(\"/api/users/login\", x)\n           .then(res=> res.data)\n})\n\nconst userLoggedReducer = createReducer({},{\n    [setUserLogged.fulfilled]: (state,action) => action.payload,\n    [setUser.fulfilled] : (state,action) => action.payload,\n})\n\n\nexport default userLoggedReducer"]},"metadata":{},"sourceType":"module"}