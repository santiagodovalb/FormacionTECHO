{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminUsers/Users.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport useAuthorize from \"../../../utils/authorization\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Users() {\n  _s();\n\n  const [rol, setRol] = useState(0);\n  const [users, setUsers] = useState([]);\n  const user = useSelector(state => state.user);\n  const roles = useSelector(state => state.roles.filter(rol => rol.id !== 1));\n  const location = useLocation();\n  const id = location.pathname.slice(21);\n  useEffect(() => {\n    axios.get(`/api/users/sede/${id}`).then(res => res.data).then(users => setUsers(users));\n  }, [user]);\n\n  const handleChange = e => {\n    setRol(e.target.value);\n  };\n\n  const handleClick = (userId, rolId) => {\n    axios.post('/api/roles/set/', {\n      userId,\n      rolId,\n      user\n    }).then(() => axios.get(`/api/users/sede/${id}`)).then(res => res.data).then(users => setUsers(users));\n  };\n\n  const handleDelete = userId => {\n    return axios.delete(`/api/users/${userId}`).then(() => axios.get(`/api/users/sede/${id}`).then(res => res.data).then(users => setUsers(users)));\n  };\n\n  useAuthorize(user, 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Administrar roles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), !users.length && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No hay voluntarios/gestores en esta sede\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 31\n    }, this), users && users.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Nombre: \", user.full_name, \" Rol: \", user.rol && user.rol.tipo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rol\",\n          children: \"Seleccionar rol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Seleccionar rol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), roles && roles.map(rol => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: rol.id,\n              children: [\" \", rol.tipo, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleClick(user.id, parseInt(rol)),\n          type: \"button\",\n          children: \"Asignar rol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(user.id),\n          type: \"button\",\n          children: \" Eliminar usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Users, \"Nhe2UMMBX0siHQDr0bTDtlxqVJQ=\", false, function () {\n  return [useSelector, useSelector, useLocation, useAuthorize];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminUsers/Users.jsx"],"names":["React","useState","useEffect","axios","useSelector","useHistory","useLocation","useAuthorize","Users","rol","setRol","users","setUsers","user","state","roles","filter","id","location","pathname","slice","get","then","res","data","handleChange","e","target","value","handleClick","userId","rolId","post","handleDelete","delete","length","map","full_name","tipo","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useSelector} from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom';\nimport useAuthorize from \"../../../utils/authorization\";\n\nfunction Users () {\n\n    const [rol, setRol] = useState(0);\n    const [users, setUsers] = useState([])\n    const user = useSelector(state => state.user)\n    const roles = useSelector(state=>state.roles.filter((rol)=> rol.id!==1))\n    const location = useLocation()\n    const id = location.pathname.slice(21)\n\n    useEffect(() => {\n        axios.get(`/api/users/sede/${id}`)\n        .then(res => res.data)\n        .then(users => setUsers(users))\n    }, [user])\n\n    const handleChange = (e) => {\n        setRol(e.target.value)\n    }\n\n    const handleClick = (userId, rolId) => {\n        axios.post('/api/roles/set/', {userId, rolId, user})\n        .then(() => axios.get(`/api/users/sede/${id}`))\n        .then(res => res.data)\n        .then(users => setUsers(users))\n    }\n\n    const handleDelete = (userId) => {\n        return axios.delete(`/api/users/${userId}`)\n        .then(() => axios.get(`/api/users/sede/${id}`)\n            .then(res => res.data)\n            .then(users => setUsers(users)))\n    }\n\n  \n    useAuthorize(user, 1)\n\n    return (\n        <div>\n            <h1>Administrar roles</h1>\n            {!users.length && <h1>No hay voluntarios/gestores en esta sede</h1>}\n            {users && users.map(user => {\n                return (\n                    \n                    <div key={user.id}>\n                        <h2>Nombre: {user.full_name} Rol: {user.rol && user.rol.tipo}</h2>\n                        <label htmlFor='rol'>Seleccionar rol</label>\n                        <select onChange={handleChange}>\n                            <option>Seleccionar rol</option>\n                            {roles && roles.map(rol=>{\n                                return(\n                                <option value={rol.id}> {rol.tipo} </option>\n                                )\n                            })}\n                        </select>\n                        <button onClick={(e) => handleClick(user.id, parseInt(rol))} type='button'>Asignar rol</button>\n                        <button onClick={() => handleDelete(user.id)} type=\"button\"> Eliminar usuario</button>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Users"]},"metadata":{},"sourceType":"module"}