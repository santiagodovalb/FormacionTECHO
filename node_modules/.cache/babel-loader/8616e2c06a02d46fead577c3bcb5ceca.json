{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminRoles/Roles.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { useHistory } from 'react-router';\nimport { getRoles } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Roles() {\n  _s();\n\n  const [form, setForm] = useState({});\n  const roles = useSelector(state => state.roles).filter(rol => rol.id > 1);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector(state => state.user);\n  useEffect(() => {}, [roles]);\n\n  const toggleForm = id => {\n    document.getElementById(id).style.display = document.getElementById(id).style.display === 'block' ? 'none' : 'block';\n  };\n\n  const handleSubmit = id => {\n    axios.put(`/api/roles/${id}`, form).then(res => res.data).then(() => dispatch(getRoles()));\n  };\n\n  const handleChange = e => {\n    setForm({\n      tipo: e.target.value\n    });\n  };\n\n  const handleDelete = (e, id) => {\n    e.preventDefault();\n    return axios.delete(`/api/roles/${id}`); // .then(() => dispatch(getRoles()))\n  };\n\n  if (user.rolId && user.rolId !== 1) {\n    history.push(\"/unauthorized\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No autorizado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: roles && roles.map(rol => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: rol.tipo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleForm(`sedeForm${rol.id}`),\n          type: \"button\",\n          children: \"Modificar Rol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: () => handleSubmit(rol.id),\n          id: `sedeForm${rol.id}`,\n          style: {\n            display: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nombre\",\n            children: \"Tipo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            type: \"text\",\n            name: \"nombre\",\n            placeholder: rol.tipo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Confirmar cambios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleDelete(e, rol.id),\n          type: \"button\",\n          children: \"Borrar rol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Roles, \"1fdTJbBRD+s3DoAzwUdHdgTMxi8=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useSelector];\n});\n\n_c = Roles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Roles\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminRoles/Roles.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","axios","useHistory","getRoles","Roles","form","setForm","roles","state","filter","rol","id","dispatch","history","user","toggleForm","document","getElementById","style","display","handleSubmit","put","then","res","data","handleChange","e","tipo","target","value","handleDelete","preventDefault","delete","rolId","push","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport axios from 'axios'\nimport { useHistory } from 'react-router'\nimport { getRoles } from '@testing-library/react'\n\nexport default function Roles() {\n    const [form, setForm] = useState({})\n\n    const roles = useSelector(state => state.roles).filter(rol => rol.id > 1)\n    const dispatch = useDispatch()\n    const history = useHistory();\n    const user = useSelector(state => state.user)\n\n    useEffect(() => {\n\n    }, [roles])\n\n    const toggleForm = (id) => {\n        document.getElementById(id).style.display = document.getElementById(id).style.display === 'block' ? 'none' : 'block'\n    }\n\n    const handleSubmit = (id) => {\n        axios.put(`/api/roles/${id}`, form)\n        .then(res => res.data)\n        .then(() => dispatch(getRoles()))\n    }\n\n    const handleChange = (e) => {\n        setForm({tipo: e.target.value})\n    }\n\n    const handleDelete = (e, id) => {\n        e.preventDefault()\n        return axios.delete(`/api/roles/${id}`)\n        // .then(() => dispatch(getRoles()))\n    }\n\n    if (user.rolId && user.rolId !== 1) {\n        history.push(\"/unauthorized\");\n        return <><h1>No autorizado</h1></>;\n      }\n\n    return (\n        <div>\n            {roles && roles.map(rol => {\n                return (\n                    <div>\n                        <h3>{rol.tipo}</h3>\n                        <button onClick={() => toggleForm(`sedeForm${rol.id}`)} type='button'>Modificar Rol</button>\n                        <form onSubmit={() => handleSubmit(rol.id)} id={`sedeForm${rol.id}`} style={{display: 'none'}}>\n                            <label htmlFor='nombre'>Tipo</label>\n                            <input onChange={handleChange} type='text' name='nombre' placeholder={rol.tipo}></input>\n                            <button type='submit'>Confirmar cambios</button>\n                        </form>\n                            <button onClick={(e) => handleDelete(e, rol.id)} type='button'>Borrar rol</button>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}