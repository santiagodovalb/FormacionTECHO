{"ast":null,"code":"const minimos = (user, bloques) => {\n  const bloquesMinimos = bloques.filter(bloque => bloque.minimo === true);\n  const userBloques = bloquesMinimos.filter(bloque => bloque.roles.map(rol => rol.id).includes(user.rolId));\n  const entregados = user.entregas.filter(entrega => entrega.bloque.minimo === true && entrega.aprobado === true);\n  return `${entregados.length}/${userBloques.length}`;\n};\n\nconst minimosCompletados = user => {\n  const entregados = user.entregas ? user.entregas.filter(entrega => entrega.bloque.minimo === true && entrega.aprobado === true) : [];\n  return entregados.length;\n};\n\nconst minimosTotal = (user, bloques) => {\n  const bloquesMinimos = bloques.filter(bloque => bloque.minimo === true);\n  const userBloques = bloquesMinimos.filter(bloque => bloque.roles.map(rol => rol.id).includes(user.rolId));\n  return userBloques.length;\n};\n\nconst opcionales = (user, bloques) => {\n  const bloquesOpcionales = bloques.filter(bloque => bloque.minimo === false);\n  const userBloques = bloquesOpcionales.filter(bloque => bloque.roles.map(rol => rol.id).includes(user.rolId));\n  const entregados = user.entregas.filter(entrega => entrega.bloque.minimo === false && entrega.aprobado === true);\n  return `${entregados.length}/${userBloques.length}`;\n};\n\nconst opcionalesCompletados = user => {\n  const entregados = user.entregas ? user.entregas.filter(entrega => entrega.bloque.minimo === false && entrega.aprobado === true) : [];\n  return entregados.length;\n};\n\nconst opcionalesTotal = (user, bloques) => {\n  const bloquesMinimos = bloques.filter(bloque => bloque.minimo === false);\n  const userBloques = bloquesMinimos.filter(bloque => bloque.roles.map(rol => rol.id).includes(user.rolId));\n  return userBloques.length;\n};\n\nconst pendientes = user => {\n  return user.entregas.filter(entrega => entrega.aprobado === false).length;\n};\n\nconst totalPendientes = voluntarios => {\n  let entregas = voluntarios.map(voluntario => voluntario.entregas.map(entrega => entrega.aprobado));\n  let pendientes = entregas.flat().filter(state => state === false);\n  return pendientes.length;\n};\n\nconst totalMinimos = (voluntarios, bloques) => {\n  const bloquesMinimos = bloques.filter(bloque => bloque.minimo === true);\n  let totalMin = 0;\n  let aprobados = 0;\n\n  for (let i = 0; i < voluntarios.length; i++) {\n    const userBloques = bloquesMinimos.filter(bloque => bloque.roles.map(rol => rol.id).includes(voluntarios[i].rolId)).length;\n    totalMin += userBloques;\n    aprobados += voluntarios[i].entregas.filter(entrega => entrega.bloque.minimo === true && entrega.aprobado === true).length;\n  }\n\n  return `${aprobados}/${totalMin}`;\n};\n\nconst totalOpcionales = (voluntarios, bloques) => {\n  const bloquesMinimos = bloques.filter(bloque => bloque.minimo === false);\n  let totalMin = 0;\n  let aprobados = 0;\n\n  for (let i = 0; i < voluntarios.length; i++) {\n    const userBloques = bloquesMinimos.filter(bloque => bloque.roles.map(rol => rol.id).includes(voluntarios[i].rolId)).length;\n    totalMin += userBloques;\n    aprobados += voluntarios[i].entregas.filter(entrega => entrega.bloque.minimo === false && entrega.aprobado === true).length;\n  }\n\n  return `${aprobados}/${totalMin}`;\n};\n\nexport { totalMinimos, totalOpcionales, totalPendientes, minimos, opcionales, pendientes, minimosCompletados, opcionalesCompletados, minimosTotal, opcionalesTotal };","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Gestor/DashboardGestor/dashUtils.js"],"names":["minimos","user","bloques","bloquesMinimos","filter","bloque","minimo","userBloques","roles","map","rol","id","includes","rolId","entregados","entregas","entrega","aprobado","length","minimosCompletados","minimosTotal","opcionales","bloquesOpcionales","opcionalesCompletados","opcionalesTotal","pendientes","totalPendientes","voluntarios","voluntario","flat","state","totalMinimos","totalMin","aprobados","i","totalOpcionales"],"mappings":"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","sourcesContent":["const minimos = (user, bloques) => {\n    const bloquesMinimos = bloques.filter(bloque => bloque.minimo === true)\n    const userBloques = bloquesMinimos.filter(bloque => bloque.roles.map(rol => rol.id).includes(user.rolId))\n    const entregados = user.entregas.filter(entrega => entrega.bloque.minimo === true && entrega.aprobado === true)\n    return `${entregados.length}/${userBloques.length}`\n}\n\nconst minimosCompletados = (user) => {\n    const entregados = user.entregas? user.entregas.filter(entrega => entrega.bloque.minimo === true && entrega.aprobado === true) : []\n    return entregados.length\n}\n\nconst minimosTotal = (user,bloques) =>{\n    const bloquesMinimos = bloques.filter(bloque => bloque.minimo === true)\n    const userBloques = bloquesMinimos.filter(bloque => bloque.roles.map(rol => rol.id).includes(user.rolId))\n    return userBloques.length\n}\n\nconst opcionales = (user, bloques) => {\n    const bloquesOpcionales = bloques.filter(bloque => bloque.minimo === false)\n    const userBloques = bloquesOpcionales.filter(bloque => bloque.roles.map(rol => rol.id).includes(user.rolId))\n    const entregados = user.entregas.filter(entrega => entrega.bloque.minimo === false && entrega.aprobado === true)\n    return `${entregados.length}/${userBloques.length}`\n}\n\nconst opcionalesCompletados = (user) => {\n    \n    const entregados = user.entregas? user.entregas.filter(entrega => entrega.bloque.minimo === false && entrega.aprobado === true) : []\n    return entregados.length\n}\n\nconst opcionalesTotal = (user,bloques) =>{\n    const bloquesMinimos = bloques.filter(bloque => bloque.minimo === false)\n    const userBloques = bloquesMinimos.filter(bloque => bloque.roles.map(rol => rol.id).includes(user.rolId))\n    return userBloques.length\n}\n\nconst pendientes = (user) => {\n    return user.entregas.filter(entrega => entrega.aprobado === false).length\n}\n\nconst totalPendientes = (voluntarios) => {\n    let entregas = voluntarios.map(voluntario => voluntario.entregas.map(entrega => entrega.aprobado))\n    let pendientes = entregas.flat().filter(state => state === false)\n    return pendientes.length\n}\n\nconst totalMinimos = (voluntarios, bloques) => {\n    const bloquesMinimos = bloques.filter(bloque => bloque.minimo === true)\n    let totalMin = 0\n    let aprobados = 0\n    for (let i = 0; i < voluntarios.length; i++) {\n        const userBloques = bloquesMinimos.filter(bloque => bloque.roles.map(rol => rol.id).includes(voluntarios[i].rolId)).length\n        totalMin += userBloques\n        aprobados += voluntarios[i].entregas.filter(entrega => entrega.bloque.minimo === true && entrega.aprobado === true).length\n\n    }\n    return `${aprobados}/${totalMin}`\n}\n\nconst totalOpcionales = (voluntarios, bloques) => {\n    const bloquesMinimos = bloques.filter(bloque => bloque.minimo === false)\n    let totalMin = 0\n    let aprobados = 0\n    for (let i = 0; i < voluntarios.length; i++) {\n        const userBloques = bloquesMinimos.filter(bloque => bloque.roles.map(rol => rol.id).includes(voluntarios[i].rolId)).length\n        totalMin += userBloques\n        aprobados += voluntarios[i].entregas.filter(entrega => entrega.bloque.minimo === false && entrega.aprobado === true).length\n\n    }\n    return `${aprobados}/${totalMin}`\n}\n\nexport { totalMinimos, totalOpcionales, totalPendientes, minimos, opcionales, pendientes, minimosCompletados, opcionalesCompletados,minimosTotal,opcionalesTotal }"]},"metadata":{},"sourceType":"module"}