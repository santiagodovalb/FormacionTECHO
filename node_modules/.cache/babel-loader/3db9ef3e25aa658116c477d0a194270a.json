{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Gestor/DashboardGestor/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Table } from \"antd\";\nimport { totalMinimos, totalOpcionales, totalPendientes, minimos, opcionales, pendientes } from \"./dashUtils\";\nimport useAuthorize from \"../../../utils/authorization\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DashboardGestor() {\n  _s();\n\n  var _user$sede;\n\n  const user = useSelector(state => state.user);\n  const bloques = useSelector(state => state.bloques);\n  const [voluntarios, setVoluntarios] = useState([]);\n  useEffect(() => {\n    axios.get(`/api/users/sede/${user.sedeId}`).then(res => res.data).then(voluntarios => setVoluntarios(voluntarios.filter(voluntario => voluntario.rolId > 2))).catch(err => err);\n  }, [user, bloques]);\n  useAuthorize(user, 2);\n  const dataVoluntarios = voluntarios.map(voluntario => {\n    return {\n      key: voluntario.id,\n      total: \"\",\n      voluntario: voluntario.full_name,\n      bloquesMinimos: minimos(voluntario, bloques),\n      bloquesOpcionales: opcionales(voluntario, bloques),\n      entregasPendientes: pendientes(voluntario)\n    };\n  });\n  const columns = [{\n    title: \"Entregas pendientes por voluntario\",\n    render: record => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [record.voluntario, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), record.entregasPendientes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this),\n    responsive: [\"xs\"]\n  }, {\n    title: \"\",\n    dataIndex: \"total\",\n    key: \"total\",\n    responsive: [\"xs\"]\n  }, {\n    title: \"\",\n    dataIndex: \"total\",\n    key: \"total\",\n    responsive: [\"sm\"]\n  }, {\n    title: \"Voluntario\",\n    dataIndex: \"voluntario\",\n    key: \"voluntario\",\n    responsive: [\"sm\"]\n  }, {\n    title: \"Bloques minimos completados\",\n    dataIndex: \"bloquesMinimos\",\n    key: \"bloquesMinimos\",\n    responsive: [\"sm\"]\n  }, {\n    title: \"Bloques opcionales completados\",\n    dataIndex: \"bloquesOpcionales\",\n    key: \"bloquesOpcionales\",\n    responsive: [\"sm\"]\n  }, {\n    title: \"Entregas pendientes\",\n    dataIndex: \"entregasPendientes\",\n    key: \"entregasPendientes\",\n    responsive: [\"sm\"]\n  }];\n  const dataSource = [...dataVoluntarios, {\n    key: \"total\",\n    total: \"Total\",\n    voluntario: voluntarios.length,\n    bloquesMinimos: totalMinimos(voluntarios, bloques),\n    bloquesOpcionales: totalOpcionales(voluntarios, bloques),\n    entregasPendientes: totalPendientes(voluntarios)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"fs-3 text-secondary p-5\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Dashboard de \", (_user$sede = user.sede) === null || _user$sede === void 0 ? void 0 : _user$sede.nombre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        columns: columns,\n        dataSource: dataSource,\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DashboardGestor, \"kaMmuXPE6Yvl4NwKX1Fr0TaYcQ0=\", false, function () {\n  return [useSelector, useSelector, useAuthorize];\n});\n\n_c = DashboardGestor;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardGestor\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Gestor/DashboardGestor/index.jsx"],"names":["React","useEffect","useState","useSelector","axios","Table","totalMinimos","totalOpcionales","totalPendientes","minimos","opcionales","pendientes","useAuthorize","DashboardGestor","user","state","bloques","voluntarios","setVoluntarios","get","sedeId","then","res","data","filter","voluntario","rolId","catch","err","dataVoluntarios","map","key","id","total","full_name","bloquesMinimos","bloquesOpcionales","entregasPendientes","columns","title","render","record","responsive","dataIndex","dataSource","length","sede","nombre"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Table } from \"antd\";\nimport {\n  totalMinimos,\n  totalOpcionales,\n  totalPendientes,\n  minimos,\n  opcionales,\n  pendientes,\n} from \"./dashUtils\";\nimport useAuthorize from \"../../../utils/authorization\";\n\nexport default function DashboardGestor() {\n  const user = useSelector((state) => state.user);\n  const bloques = useSelector((state) => state.bloques);\n  const [voluntarios, setVoluntarios] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`/api/users/sede/${user.sedeId}`)\n      .then((res) => res.data)\n      .then((voluntarios) =>\n        setVoluntarios(voluntarios.filter((voluntario) => voluntario.rolId > 2))\n      )\n      .catch((err) => err);\n  }, [user, bloques]);\n\n  useAuthorize(user, 2);\n\n  const dataVoluntarios = voluntarios.map((voluntario) => {\n    return {\n      key: voluntario.id,\n      total: \"\",\n      voluntario: voluntario.full_name,\n      bloquesMinimos: minimos(voluntario, bloques),\n      bloquesOpcionales: opcionales(voluntario, bloques),\n      entregasPendientes: pendientes(voluntario),\n    };\n  });\n\n  const columns = [\n    {\n      title: \"Entregas pendientes por voluntario\",\n      render: (record) => (\n        <React.Fragment>\n          {record.voluntario}\n          <br />\n          {record.entregasPendientes}\n        </React.Fragment>\n      ),\n      responsive: [\"xs\"],\n    },\n    {\n      title: \"\",\n      dataIndex: \"total\",\n      key: \"total\",\n      responsive: [\"xs\"],\n    },\n    {\n      title: \"\",\n      dataIndex: \"total\",\n      key: \"total\",\n      responsive: [\"sm\"],\n    },\n    {\n      title: \"Voluntario\",\n      dataIndex: \"voluntario\",\n      key: \"voluntario\",\n      responsive: [\"sm\"],\n    },\n    {\n      title: \"Bloques minimos completados\",\n      dataIndex: \"bloquesMinimos\",\n      key: \"bloquesMinimos\",\n      responsive: [\"sm\"],\n    },\n    {\n      title: \"Bloques opcionales completados\",\n      dataIndex: \"bloquesOpcionales\",\n      key: \"bloquesOpcionales\",\n      responsive: [\"sm\"],\n    },\n    {\n      title: \"Entregas pendientes\",\n      dataIndex: \"entregasPendientes\",\n      key: \"entregasPendientes\",\n      responsive: [\"sm\"],\n    },\n  ];\n\n  const dataSource = [\n    ...dataVoluntarios,\n    {\n      key: \"total\",\n      total: \"Total\",\n      voluntario: voluntarios.length,\n      bloquesMinimos: totalMinimos(voluntarios, bloques),\n      bloquesOpcionales: totalOpcionales(voluntarios, bloques),\n      entregasPendientes: totalPendientes(voluntarios),\n    },\n  ];\n\n  return (\n    <div className=\"dashboard text-center\">\n      <h1 className=\"fs-3 text-secondary p-5\">\n        <strong>Dashboard de {user.sede?.nombre}</strong>\n      </h1>\n      <div className=\"table\">\n        <Table bordered columns={columns} dataSource={dataSource} pagination={false} />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}