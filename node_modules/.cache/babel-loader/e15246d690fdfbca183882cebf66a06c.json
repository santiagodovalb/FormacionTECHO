{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminBloques/ModificarBloque.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ModificarBloque() {\n  _s();\n\n  const [bloque, setBloque] = useState();\n  const [form, setForm] = useState({\n    bloque\n  });\n  const {\n    id\n  } = useParams();\n  const user = useSelector(state => state.user);\n  const roles = useSelector(state => state.roles).filter(rol => rol.id > 2);\n  const history = useHistory();\n  useEffect(() => {\n    axios.get(`/api/bloques/${id}`).then(res => res.data).then(bloque => {\n      console.log(bloque);\n      setForm({\n        titulo: bloque.titulo,\n        descripcion: bloque.descripcion,\n        minimo: bloque.minimo,\n        rolesId: bloque.roles.map(rol => rol.id)\n      });\n      setBloque(bloque);\n      return bloque;\n    }).then(bloque => {\n      const rolesIds = roles.map(rol => rol.id);\n\n      for (let i = 0; i < roles.length; i++) {\n        document.getElementById(`rol${rolesIds[i]}`).checked = bloque.roles.map(rol => rol.id).includes(rolesIds[i]) ? 'true' : 'false';\n      }\n    });\n  }, []);\n\n  const handleChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleMinimo = e => {\n    let boolean = e.target.id === 'si' ? true : false;\n    setForm({ ...form,\n      minimo: boolean\n    });\n  };\n\n  const handleRoles = e => {\n    let array = [...form.rolesId];\n    e.target.checked ? array = [...array, e.target.value] : array.splice(form.rolesId.indexOf(e.target.value), 1);\n    setForm({ ...form,\n      rolesId: [...array]\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.put(`/api/bloques/${id}`, form);\n  };\n\n  if (user.rolId && user.rolId !== 1) {\n    history.push(\"/unauthorized\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No autorizado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: bloque && bloque.titulo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), bloque && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"titulo\",\n        children: \"Titulo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"titulo\",\n        onChange: handleChange,\n        defaultValue: bloque.titulo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"descripcion\",\n        children: \"Descripcion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"descripcion\",\n        onChange: handleChange,\n        defaultValue: bloque.descripcion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Es bloque minimo?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"si\",\n        children: \"Si\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"minimo\",\n        id: \"si\",\n        checked: bloque.minimo && 'true',\n        onChange: handleMinimo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"no\",\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"minimo\",\n        id: \"no\",\n        checked: !bloque.minimo && 'true',\n        onChange: handleMinimo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A que roles esta destinado?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), roles.map(rol => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: rol.tipo,\n            children: rol.tipo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"roles\",\n            value: rol.id,\n            id: `rol${rol.id}`,\n            onChange: handleRoles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Crear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModificarBloque, \"Z38rdWdISAof1n6LpKGLcyHGJmE=\", false, function () {\n  return [useParams, useSelector, useSelector, useHistory];\n});\n\n_c = ModificarBloque;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModificarBloque\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/src/containers/Admin/AdminBloques/ModificarBloque.jsx"],"names":["axios","React","useEffect","useState","useSelector","useHistory","useParams","ModificarBloque","bloque","setBloque","form","setForm","id","user","state","roles","filter","rol","history","get","then","res","data","console","log","titulo","descripcion","minimo","rolesId","map","rolesIds","i","length","document","getElementById","checked","includes","handleChange","e","target","name","value","handleMinimo","boolean","handleRoles","array","splice","indexOf","handleSubmit","preventDefault","put","rolId","push","tipo"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\n\nexport default function ModificarBloque() {\n\n    const [bloque, setBloque] = useState();\n    const [form, setForm] = useState({bloque});\n    const { id } = useParams()\n    const user = useSelector(state => state.user)\n    const roles = useSelector(state => state.roles).filter(rol => rol.id > 2)\n    const history = useHistory()\n\n    useEffect(() => {\n        axios.get(`/api/bloques/${id}`)\n        .then(res => res.data)\n        .then(bloque => {\n            console.log(bloque);\n            setForm({\n                titulo: bloque.titulo,\n                descripcion: bloque.descripcion,\n                minimo: bloque.minimo,\n                rolesId: bloque.roles.map(rol => rol.id)\n            })\n            setBloque(bloque)\n        \n            return bloque\n            })\n        .then(bloque => {\n            const rolesIds = roles.map(rol => rol.id)\n            for(let i = 0; i < roles.length; i++) {\n                document.getElementById(`rol${rolesIds[i]}`).checked = bloque.roles.map(rol => rol.id).includes(rolesIds[i]) ? 'true' : 'false'\n            }\n        })\n    }, [])\n\n    const handleChange = (e) => {\n        setForm({...form, [e.target.name]: e.target.value})\n    }\n\n    const handleMinimo = (e) => {\n        let boolean = e.target.id === 'si' ? true : false\n        setForm({...form, minimo: boolean})\n    }\n\n    const handleRoles = (e) => {\n        let array = [...form.rolesId]\n        e.target.checked ? array = [...array, e.target.value] : array.splice(form.rolesId.indexOf(e.target.value), 1)\n        setForm({...form, rolesId: [...array]})\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.put(`/api/bloques/${id}`, form);\n    }\n\n  \n    if (user.rolId && user.rolId !== 1) {\n      history.push(\"/unauthorized\");\n      return <><h1>No autorizado</h1></>;\n    }\n\n    return (\n        <div>\n            <h1>{bloque && bloque.titulo}</h1>\n            {bloque && <form onSubmit={handleSubmit}>\n                <label htmlFor='titulo'>Titulo</label>\n                    <input type='text' name='titulo' onChange={handleChange} defaultValue={bloque.titulo}></input>\n                <label htmlFor='descripcion'>Descripcion</label>\n                    <textarea name='descripcion' onChange={handleChange} defaultValue={bloque.descripcion}></textarea>\n                <p>Es bloque minimo?</p>\n                    <label htmlFor='si'>Si</label>\n                    <input type=\"radio\" name='minimo' id='si' checked={bloque.minimo && 'true'} onChange={handleMinimo}/>\n                    <label htmlFor='no'>No</label>\n                    <input type=\"radio\" name='minimo' id='no' checked={!bloque.minimo && 'true'} onChange={handleMinimo}/>\n                <p>A que roles esta destinado?</p>\n\n                {roles.map(rol => {\n                    return (\n                        <div>\n                            <label htmlFor={rol.tipo} >{rol.tipo}</label>\n                        <input type=\"checkbox\" name='roles' value={rol.id} id={`rol${rol.id}`} onChange={handleRoles}/>\n                        </div>\n                    )\n                })}\n                <button type='submit'>Crear</button>\n            </form>}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}