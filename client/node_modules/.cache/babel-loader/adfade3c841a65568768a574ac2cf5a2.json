{"ast":null,"code":"import _regeneratorRuntime from\"/home/santi/P5/TECHO/formacion-techo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/santi/P5/TECHO/formacion-techo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/home/santi/P5/TECHO/formacion-techo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/santi/P5/TECHO/formacion-techo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/santi/P5/TECHO/formacion-techo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{updatePassword}from\"../../../redux/users\";import{message}from\"antd\";import{Form,Input}from\"antd\";import\"bootstrap/dist/css/bootstrap.min.css\";import\"antd/dist/antd.css\";import\"./GestorPassword.css\";import useAuthorize from\"../../../utils/authorization\";import isValid from\"../../../utils/specialChars\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var GestorPassword=function GestorPassword(){var _useState=useState({password:\"\",newPassword:\"\",newPasswordConfirm:\"\"}),_useState2=_slicedToArray(_useState,2),form=_useState2[0],setForm=_useState2[1];var dispatch=useDispatch();var user=useSelector(function(state){return state.user;});useAuthorize(user,2);var onChange=function onChange(e){var _e$target=e.target,id=_e$target.id,value=_e$target.value;setForm(_objectSpread(_objectSpread({},form),{},_defineProperty({},id,value)));};var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(form.newPassword===form.newPasswordConfirm)){_context.next=5;break;}if(isValid(form.newPassword)){_context.next=3;break;}return _context.abrupt(\"return\",message.error(\"No se permiten caracteres especiales\"));case 3:_context.next=5;return dispatch(updatePassword({id:user.id,oldP:form.password,newP:form.newPassword})).then(function(data){if(!data.payload)message.error(\"Bad credentials\");else{message.success(\"Password changed\");}});case 5:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"change_password_div\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"fs-3 text-secondary m-5\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Cambiar contrase\\xF1a\"})}),/*#__PURE__*/_jsxs(Form,{initialValues:{remember:true},onFinish:onSubmit,children:[/*#__PURE__*/_jsx(Form.Item,{onChange:onChange,label:\"Actual contrase\\xF1a:\",name:\"password\",rules:[{required:true,message:\"Please input your password!\"}],children:/*#__PURE__*/_jsx(Input.Password,{})}),/*#__PURE__*/_jsx(Form.Item,{onChange:onChange,label:\"Nueva contrase\\xF1a:\",name:\"newPassword\",rules:[{required:true,message:\"Please input your password!\"}],children:/*#__PURE__*/_jsx(Input.Password,{})}),/*#__PURE__*/_jsx(Form.Item,{onChange:onChange,label:\"Confirm\\xE1 la nueva contrase\\xF1a\",name:\"newPasswordConfirm\",rules:[{required:true,message:\"Please input your password!\"}],children:/*#__PURE__*/_jsx(Input.Password,{})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"button-style green button-style-form my-3 p-2 fs-4\",children:\"Cambiar\"})]})]})});};export default GestorPassword;","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/client/src/containers/Gestor/GestorPassword/GestorPassword.jsx"],"names":["React","useState","useSelector","useDispatch","updatePassword","message","Form","Input","useAuthorize","isValid","GestorPassword","password","newPassword","newPasswordConfirm","form","setForm","dispatch","user","state","onChange","e","target","id","value","onSubmit","error","oldP","newP","then","data","payload","success","remember","required"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updatePassword } from \"../../../redux/users\";\nimport { message } from \"antd\";\nimport { Form, Input } from \"antd\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\nimport \"./GestorPassword.css\";\nimport useAuthorize from \"../../../utils/authorization\";\nimport isValid from \"../../../utils/specialChars\";\n\nconst GestorPassword = () => {\n  const [form, setForm] = useState({\n    password: \"\",\n    newPassword: \"\",\n    newPasswordConfirm: \"\",\n  });\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n\n  useAuthorize(user, 2);\n\n  const onChange = (e) => {\n    const { id, value } = e.target;\n    setForm({ ...form, [id]: value });\n  };\n\n  const onSubmit = async () => {\n    if (form.newPassword === form.newPasswordConfirm) {\n      if (!isValid(form.newPassword)) {\n        return message.error(\"No se permiten caracteres especiales\");\n      }\n      await dispatch(\n        updatePassword({\n          id: user.id,\n          oldP: form.password,\n          newP: form.newPassword,\n        })\n      ).then((data) => {\n        if (!data.payload) message.error(\"Bad credentials\");\n        else {\n          message.success(\"Password changed\");\n        }\n      });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"change_password_div\">\n        <h1 className=\"fs-3 text-secondary m-5\">\n          <strong>Cambiar contraseña</strong>\n        </h1>\n        <Form\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onSubmit}\n        >\n          <Form.Item\n            onChange={onChange}\n            label=\"Actual contraseña:\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\",\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            onChange={onChange}\n            label=\"Nueva contraseña:\"\n            name=\"newPassword\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\",\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            onChange={onChange}\n            label=\"Confirmá la nueva contraseña\"\n            name=\"newPasswordConfirm\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\",\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <button\n            type=\"submit\"\n            className=\"button-style green button-style-form my-3 p-2 fs-4\"\n          >\n            Cambiar\n          </button>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default GestorPassword;\n"]},"metadata":{},"sourceType":"module"}