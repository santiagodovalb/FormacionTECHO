{"ast":null,"code":"import { createAsyncThunk, createReducer } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const setUsers = createAsyncThunk(\"SET-USERS\", () => {\n  return axios.get(\"/api/users/\").then(res => res.data);\n});\nexport const updatePassword = createAsyncThunk(\"UPDATE_PASSWORD\", ({\n  id,\n  oldP,\n  newP\n}) => {\n  return axios.put(`/api/users/updatePass/${id}`, {\n    oldP,\n    newP\n  }).then(res => {\n    return res.data;\n  });\n});\nconst usersReducer = createReducer([], {\n  [setUsers.fulfilled]: (state, action) => action.payload,\n  [updatePassword.fulfilled]: (state, action) => action.payload,\n  [updatePassword.rejected]: (state, action) => action.payload\n});\nexport default usersReducer;","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/client/src/redux/users.js"],"names":["createAsyncThunk","createReducer","axios","setUsers","get","then","res","data","updatePassword","id","oldP","newP","put","usersReducer","fulfilled","state","action","payload","rejected"],"mappings":"AAAA,SAASA,gBAAT,EAA4BC,aAA5B,QAAgD,kBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAGH,gBAAgB,CAAE,WAAF,EAAc,MAAK;AACvD,SAAOE,KAAK,CAACE,GAAN,CAAU,aAAV,EAAyBC,IAAzB,CAA8BC,GAAG,IAAEA,GAAG,CAACC,IAAvC,CAAP;AACH,CAFuC,CAAjC;AAIP,OAAO,MAAMC,cAAc,GAAGR,gBAAgB,CAAE,iBAAF,EAAqB,CAAC;AAACS,EAAAA,EAAD;AAAIC,EAAAA,IAAJ;AAAUC,EAAAA;AAAV,CAAD,KAAsB;AACrF,SAAOT,KAAK,CAACU,GAAN,CAAW,yBAAwBH,EAAG,EAAtC,EAAyC;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAzC,EACNN,IADM,CACDC,GAAG,IAAI;AACT,WAAOA,GAAG,CAACC,IAAX;AAAgB,GAFb,CAAP;AAIH,CAL6C,CAAvC;AAOP,MAAMM,YAAY,GAAGZ,aAAa,CAAC,EAAD,EAAI;AAClC,GAACE,QAAQ,CAACW,SAAV,GAAsB,CAACC,KAAD,EAAOC,MAAP,KAAkBA,MAAM,CAACC,OADb;AAElC,GAACT,cAAc,CAACM,SAAhB,GAA4B,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OAFpB;AAGlC,GAACT,cAAc,CAACU,QAAhB,GAA2B,CAACH,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AAHnB,CAAJ,CAAlC;AAOA,eAAeJ,YAAf","sourcesContent":["import { createAsyncThunk , createReducer} from \"@reduxjs/toolkit\";\nimport axios from \"axios\"\n\nexport const setUsers = createAsyncThunk (\"SET-USERS\",() =>{\n    return axios.get(\"/api/users/\").then(res=>res.data)\n})\n\nexport const updatePassword = createAsyncThunk (\"UPDATE_PASSWORD\", ({id,oldP, newP }) => {\n    return axios.put(`/api/users/updatePass/${id}`, {oldP, newP})\n    .then(res => {\n        return res.data})\n        \n})\n\nconst usersReducer = createReducer([],{\n    [setUsers.fulfilled]: (state,action) => action.payload,\n    [updatePassword.fulfilled]: (state, action) => action.payload,\n    [updatePassword.rejected]: (state, action) => action.payload,\n})\n\n\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}