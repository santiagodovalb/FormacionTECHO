{"ast":null,"code":"var _jsxFileName = \"/home/santi/P5/TECHO/formacion-techo/client/src/containers/Admin/AdminUsers/Users.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { Select, message } from \"antd\";\nimport \"./AdminUsers.css\";\nimport useAuthorize from \"../../../utils/authorization\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nfunction Users() {\n  _s();\n\n  const [rol, setRol] = useState(0);\n  const [users, setUsers] = useState([]);\n  const user = useSelector(state => state.user);\n  const roles = useSelector(state => state.roles.filter(rol => rol.id !== 1));\n  const location = useLocation();\n  const id = location.pathname.slice(21);\n  useEffect(() => {\n    axios.get(`/api/users/sede/${id}`).then(res => res.data).then(users => setUsers(users));\n  }, [user, id]);\n\n  const handleChange = e => {\n    setRol(e);\n  };\n\n  const handleClick = (userId, rolId) => {\n    axios.post(\"/api/roles/set/\", {\n      userId,\n      rolId,\n      user\n    }).then(() => axios.get(`/api/users/sede/${id}`)).then(res => res.data).then(users => setUsers(users));\n  };\n\n  const alertaEliminar = Swal.mixin({\n    buttonsStyling: true\n  });\n\n  const handleDelete = userId => {\n    alertaEliminar.fire({\n      title: \"Estás seguro?\",\n      text: \"Si lo confirmas, no podrás deshacerlo!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Si, borrar!\",\n      cancelButtonText: \"No, cancelar!\",\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      reverseButtons: true\n    }).then(result => {\n      if (result.isConfirmed) {\n        alertaEliminar.fire(\"Eliminado!\", \"El usuario fue eliminado correctamente.\", \"success\");\n        axios.delete(`/api/users/${userId}`).then(() => axios.get(`/api/users/sede/${id}`).then(res => res.data).then(users => setUsers(users)));\n        message.success(\"Usuario eliminado correctamente\");\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        alertaEliminar.fire(\"Cancelado\", \"El usuario está a salvo\", \"error\");\n      }\n    });\n  };\n\n  useAuthorize(user, 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"fs-2 text-secondary\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Administrar roles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), !users.length && /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"fs-4\",\n      children: \"No hay voluntarios/gestores en esta sede\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), users && users.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divAdminUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-6\",\n          children: [\"Nombre: \", \"  \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: user.full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-6\",\n          children: [\"Rol: \", \"  \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: user.rol && user.rol.tipo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          style: {\n            width: 200\n          },\n          placeholder: \"Seleccionar rol\",\n          onChange: handleChange,\n          children: roles && roles.map(rol => {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              label: \"children\",\n              value: rol.id,\n              children: [\" \", rol.tipo, \" \"]\n            }, rol.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-primary mx-1\",\n          onClick: () => handleClick(user.id, parseInt(rol)),\n          type: \"button\",\n          children: \"Asignar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-danger mx-1\",\n          onClick: () => handleDelete(user.id),\n          type: \"button\",\n          children: \"Eliminar usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Users, \"Nhe2UMMBX0siHQDr0bTDtlxqVJQ=\", false, function () {\n  return [useSelector, useSelector, useLocation, useAuthorize];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/client/src/containers/Admin/AdminUsers/Users.jsx"],"names":["React","useState","useEffect","axios","useSelector","useLocation","Swal","Select","message","useAuthorize","Option","Users","rol","setRol","users","setUsers","user","state","roles","filter","id","location","pathname","slice","get","then","res","data","handleChange","e","handleClick","userId","rolId","post","alertaEliminar","mixin","buttonsStyling","handleDelete","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","result","isConfirmed","delete","success","dismiss","DismissReason","cancel","length","map","full_name","tipo","width","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { Select, message } from \"antd\";\nimport \"./AdminUsers.css\";\nimport useAuthorize from \"../../../utils/authorization\";\n\nconst { Option } = Select;\n\nfunction Users() {\n  const [rol, setRol] = useState(0);\n  const [users, setUsers] = useState([]);\n  const user = useSelector((state) => state.user);\n  const roles = useSelector((state) =>\n    state.roles.filter((rol) => rol.id !== 1)\n  );\n  const location = useLocation();\n  const id = location.pathname.slice(21);\n\n  useEffect(() => {\n    axios\n      .get(`/api/users/sede/${id}`)\n      .then((res) => res.data)\n      .then((users) => setUsers(users));\n  }, [user, id]);\n\n  const handleChange = (e) => {\n    setRol(e);\n  };\n\n  const handleClick = (userId, rolId) => {\n    axios\n      .post(\"/api/roles/set/\", { userId, rolId, user })\n      .then(() => axios.get(`/api/users/sede/${id}`))\n      .then((res) => res.data)\n      .then((users) => setUsers(users));\n  };\n  const alertaEliminar = Swal.mixin({\n    buttonsStyling: true,\n  });\n\n  const handleDelete = (userId) => {\n    alertaEliminar\n      .fire({\n        title: \"Estás seguro?\",\n        text: \"Si lo confirmas, no podrás deshacerlo!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Si, borrar!\",\n        cancelButtonText: \"No, cancelar!\",\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        reverseButtons: true,\n      })\n      .then((result) => {\n        if (result.isConfirmed) {\n          alertaEliminar.fire(\n            \"Eliminado!\",\n            \"El usuario fue eliminado correctamente.\",\n            \"success\"\n          );\n          axios.delete(`/api/users/${userId}`).then(() =>\n            axios\n              .get(`/api/users/sede/${id}`)\n              .then((res) => res.data)\n              .then((users) => setUsers(users))\n          );\n          message.success(\"Usuario eliminado correctamente\");\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n          alertaEliminar.fire(\"Cancelado\", \"El usuario está a salvo\", \"error\");\n        }\n      });\n  };\n\n  useAuthorize(user, 1);\n\n  return (\n    <div className=\"admin\">\n      <h1 className=\"fs-2 text-secondary\">\n        <strong>Administrar roles</strong>\n      </h1>\n      {!users.length && (\n        <h1 className=\"fs-4\">No hay voluntarios/gestores en esta sede</h1>\n      )}\n      <br />\n\n      {users &&\n        users.map((user) => {\n          return (\n            <div className=\"divAdminUser\" key={user.id}>\n              <p className=\"fs-6\">\n                Nombre: {\"  \"}\n                <strong>{user.full_name}</strong>\n              </p>\n              <p className=\"fs-6\">\n                Rol: {\"  \"}\n                <strong>{user.rol && user.rol.tipo}</strong>\n              </p>\n\n              <Select\n                style={{ width: 200 }}\n                placeholder=\"Seleccionar rol\"\n                onChange={handleChange}\n              >\n                {roles &&\n                  roles.map((rol) => {\n                    return (\n                      <Option key={rol.id} label=\"children\" value={rol.id}>\n                        {\" \"}\n                        {rol.tipo}{\" \"}\n                      </Option>\n                    );\n                  })}\n              </Select>\n              <button\n                className=\"btn btn-outline-primary mx-1\"\n                onClick={() => handleClick(user.id, parseInt(rol))}\n                type=\"button\"\n              >\n                Asignar\n              </button>\n              <button\n                className=\"btn btn-outline-danger mx-1\"\n                onClick={() => handleDelete(user.id)}\n                type=\"button\"\n              >\n                Eliminar usuario\n              </button>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}