{"ast":null,"code":"import _slicedToArray from\"/home/santi/P5/TECHO/formacion-techo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{getRoles}from\"../../../redux/roles\";import React,{useState}from\"react\";import{useDispatch}from\"react-redux\";import axios from\"axios\";import{useSelector}from\"react-redux\";import Roles from\"./Roles\";import useAuthorize from\"../../../utils/authorization\";import\"./AdminRoles.css\";import{message,Input,Form,Button}from\"antd\";import isValid from\"../../../utils/specialChars\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AdminRoles(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),form=_useState2[0],setForm=_useState2[1];var dispatch=useDispatch();var user=useSelector(function(state){return state.user;});var handleSubmit=function handleSubmit(){if(!isValid(form.tipo))return message.error(\"No se permiten caracteres especiales\");axios.post(\"/api/roles/\",form).then(function(res){if(res.data){message.success(\"Rol creado correctamente\");}}).then(function(){return dispatch(getRoles());}).catch(function(err){return message.error(\"Rol no creado\");});};var handleChange=function handleChange(obj1,obj2){setForm(obj2);};var toggleForm=function toggleForm(){document.getElementById(\"newRole\").style.display=document.getElementById(\"newRole\").style.display===\"block\"?\"none\":\"block\";};useAuthorize(user,1);return/*#__PURE__*/_jsxs(\"div\",{className:\"adminRoles\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"fs-2 text-secondary text-center p-5\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Gestionar roles\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:toggleForm,className:\"mb-5 p-3 fs-4 button-style green\",children:\"Crear nuevo rol\"}),/*#__PURE__*/_jsx(\"div\",{className:\"createRol\",children:/*#__PURE__*/_jsxs(Form,{style:{display:\"none\"},name:\"newRole\",labelCol:{span:8},wrapperCol:{span:16},initialValues:{remember:true},onValuesChange:function onValuesChange(obj,obj2){return handleChange(obj,obj2);},onFinish:handleSubmit,children:[/*#__PURE__*/_jsx(Form.Item,{label:\"Tipo de rol\",name:\"tipo\",children:/*#__PURE__*/_jsx(Input.TextArea,{})}),/*#__PURE__*/_jsx(Button,{style:{display:form.tipo?\"block\":\"none\"},htmlType:\"submit\",type:\"submit\",children:\"Crear rol\"})]})}),/*#__PURE__*/_jsx(Roles,{})]});}","map":{"version":3,"sources":["/home/santi/P5/TECHO/formacion-techo/client/src/containers/Admin/AdminRoles/AdminRoles.jsx"],"names":["getRoles","React","useState","useDispatch","axios","useSelector","Roles","useAuthorize","message","Input","Form","Button","isValid","AdminRoles","form","setForm","dispatch","user","state","handleSubmit","tipo","error","post","then","res","data","success","catch","err","handleChange","obj1","obj2","toggleForm","document","getElementById","style","display","span","remember","obj"],"mappings":"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","sourcesContent":["import { getRoles } from \"../../../redux/roles\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport Roles from \"./Roles\";\nimport useAuthorize from \"../../../utils/authorization\";\nimport \"./AdminRoles.css\";\nimport { message, Input, Form, Button } from \"antd\";\nimport isValid from \"../../../utils/specialChars\";\n\nexport default function AdminRoles() {\n  const [form, setForm] = useState({});\n\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => state.user);\n\n  const handleSubmit = () => {\n    if (!isValid(form.tipo))\n      return message.error(\"No se permiten caracteres especiales\");\n    axios\n      .post(\"/api/roles/\", form)\n      .then((res) => {\n        if (res.data) {\n          message.success(\"Rol creado correctamente\");\n        }\n      })\n      .then(() => dispatch(getRoles()))\n      .catch((err) => message.error(\"Rol no creado\"));\n  };\n\n  const handleChange = (obj1, obj2) => {\n    setForm(obj2);\n  };\n\n  const toggleForm = () => {\n    document.getElementById(\"newRole\").style.display =\n      document.getElementById(\"newRole\").style.display === \"block\"\n        ? \"none\"\n        : \"block\";\n  };\n\n  useAuthorize(user, 1);\n\n  return (\n    <div className=\"adminRoles\">\n      <h1 className=\"fs-2 text-secondary text-center p-5\">\n        <strong>Gestionar roles</strong>\n      </h1>\n      <button\n        type=\"button\"\n        onClick={toggleForm}\n        className=\"mb-5 p-3 fs-4 button-style green\"\n      >\n        Crear nuevo rol\n      </button>\n      <div className=\"createRol\">\n        <Form\n          style={{ display: \"none\" }}\n          name=\"newRole\"\n          labelCol={{\n            span: 8,\n          }}\n          wrapperCol={{\n            span: 16,\n          }}\n          initialValues={{\n            remember: true,\n          }}\n          onValuesChange={(obj, obj2) => handleChange(obj, obj2)}\n          onFinish={handleSubmit}\n        >\n          <Form.Item label=\"Tipo de rol\" name=\"tipo\">\n            <Input.TextArea />\n          </Form.Item>\n\n          <Button\n            style={{ display: form.tipo ? \"block\" : \"none\" }}\n            htmlType=\"submit\"\n            type=\"submit\"\n          >\n            Crear rol\n          </Button>\n        </Form>\n      </div>\n      <Roles />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}